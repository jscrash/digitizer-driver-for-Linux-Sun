C DEC/CMS REPLACEMENT HISTORY, Element LD_UKOPAREA.PFO
C *1    27-JUL-1990 11:51:46 GILLESPIE "Removed in error"
C DEC/CMS REPLACEMENT HISTORY, Element LD_UKOPAREA.PFO
C  DEC/CMS REPLACEMENT HISTORY, Element LD_UKOPAREA.PFO
C  *5    20-SEP-1989 17:16:10 VINCE "(SPR -1) fixed include paths"
C  *4    14-SEP-1989 18:19:18 GORDON "(SPR -1) checkin from gulf"
C  *3    10-AUG-1989 18:58:33 VINCE "(SPR -1) Fortran code after UNIX mods"
C  *2     4-AUG-1989 12:10:04 ADEY "(SPR -1) UPDATE THE VERSION FOR LD_UKOOA"
C  *1     3-AUG-1989 15:08:45 ADEY "support routines for UKOOA loader"
C  DEC/CMS REPLACEMENT HISTORY, Element LD_UKOPAREA.PFO
***********************************************************
*                                                         *
*                                                         *
*                                                         *
*            FINDER GRAPHICS SYSTEMS, INC                 *
*                                                         *
*                                                         *
*                                                         *
*                                                         *
*                                                         *
***********************************************************
*
*
*
* AUTHOR:REMI DORET
*
* DATE : 20/10/1986
C
*
*     ROUTINE UK_OPAREA  USED TO VERIFY THAT AN AREA IS EXISTING
*                OPEN THE  SEIS_LINE _HDR TABLE
*               FILL AN ARRAY WITH LINES HAVING ALREADY COORDINATES
*
C       OUTPUT  :   ISTATUS     ERROR CODE  = 0 SUCCESS
C                                           # 0 FAILED
C
C *****************************************************************
*
*
C
C

       SUBROUTINE UK_OPAREA (ISTATUS)
*
       INCLUDE 'ESI$INCLUDE:esi_qs.i'
       INCLUDE 'ESI$INCLUDE:ld_ukooa2.i'

	EXEC SQL BEGIN DECLARE SECTION
	CHARACTER*80   ORAC_ID
	CHARACTER*500  STMT
	CHARACTER*30   LINE_NAM
	CHARACTER*30   SURV
	INTEGER*2      LEN_NAM
	EXEC SQL END DECLARE SECTION
C
C
	CHARACTER*100  TABLE_NAME  , T_NAME
	CHARACTER*20  AREA
C
	CHARACTER*4 BLANK
	INCLUDE 'ESI$INCLUDE:esi_oracle.i'

*       DECLARATION OF FUNCTIONS

      INTEGER*4 QSG_SETC , FIG_CONFIG_PROJECT
      INTEGER*4 CTG_GET_DEFAULT_PROJECT
      INTEGER*4 HO_GET_FORTRAN_STDOUT

      INTEGER*4 STDOUT
C
      INTEGER*4 ISTAT , ISTATT
C
      INTEGER*4  TOTLIGN

      STDOUT = HO_GET_FORTRAN_STDOUT()
C
C      set maximum of opened cursor
c
      EXEC ORACLE OPTION ( MAXOPENCURSORS = 50 )
C
	BLANK = '    '

C
C     TOTLIGN IS THE NUMBER OF LINES WHICH CAN BE STORED IN COMMON
C      SISLINE
C

	TOTLIGN = L_TAB/NBWLI
C
C
	AREA = '                   '
	AREA ( 1 : NB_CHAR ) = AREANAME ( 1 : NB_CHAR)
*
      CALL UK_LOGMES ( C16 , AREA , I1 ,I2 ,I3 ,I4 )
C
C
C      TRY TO CONNECT TO ORACLE
C

	EXEC SQL WHENEVER SQLERROR GOTO 999
c
c  THE LOGIN STRING IS IN A COMMON
C
	 ORAC_ID (1:80) = LOG_STR (1:80)

CCCC    EXEC SQL CONNECT :ORAC_ID
	CALL ORG_LOGIN(ORAC_ID,ISTAT)
	IF (ISTAT.NE.0) GO TO 999


	WRITE ( LIST ,100)
100      FORMAT (/,' YOU ARE NOW CONNECTED TO ORACLE' )

*
C       SET PROJECT NAME WITH PROJECT NAME FOUND IN COMMON AREA
C
C      PUT A NULL AT THE END OF THE CHARACTER STRING
C
C
C
	 ISTAT = QSG_SETC ( IQS_PROJECT_NAME , AREA , NB_CHAR )
C
*
c
c   call the routine used to set logical s and defaults for the project
c
c
	 ISTAT = FIG_CONFIG_PROJECT ()
	 IF (ISTAT .NE. 0) GOTO 999
*
C
C       FILLS AN ARRAY WITH LINE NAMES HAVING ALREADY XY COORD
C       FOR THE SURVEY
C
C    LOOK FOR THE LENGTH OF THE  SURVEY NAME
C
	ILSURV = ISTRLEN ( SURV_NAM )
C
C
	J = 1
	IAD1 = NBCARL - 1
	 LINE_NAM = ' '
	NB_LIG = 0
C
	T_NAME = AREA(1:NB_CHAR)//'.SEIS_LINE_HDR'
C
C ADD BLANKS AT THE BEGINNING OF TABLE NAME
C
	TABLE_NAME (1:3) = '   '
	TABLE_NAME (3:100 ) = T_NAME (1:97)
C
C    BUILD THE SELECT PHRASE DEPENDING IF THERE IS A SURVEY OR NOT
C
	STMT = 'SELECT LINE_NAME FROM  '
	CALL TFSTRCAT ( STMT , TABLE_NAME , STMT )
	CALL TFSTRCAT ( STMT,'  WHERE SHOT_XY_ID IS NOT NULL',STMT )
C
C    if the survey is null or not null the select statement is different
c
	IF ( ILSURV .EQ. 0 ) THEN
	CALL TFSTRCAT ( STMT,'  AND SURVEY IS NULL',STMT )
			     ELSE
	CALL TFSTRCAT ( STMT,'  AND SURVEY =: SURV ',STMT )
	ENDIF

	EXEC SQL PREPARE S1 FROM :STMT
	EXEC SQL PREPARE S1 FROM :STMT
	EXEC SQL DECLARE C1 CURSOR FOR S1
C       WRITE ( STDOUT , 200 ) STMT ( 1:80),STMT(81:160)
200     FORMAT ( /,A80,/,A80)

C
	IF ( ILSURV .EQ. 0 ) THEN
	EXEC SQL OPEN C1
	ELSE
	SURV(1:30) = SURV_NAM(1:30)
	EXEC SQL OPEN C1  USING :SURV
	ENDIF


	EXEC SQL WHENEVER NOT FOUND GOTO 888

88      CONTINUE

	EXEC SQL FETCH C1 INTO :LINE_NAM


	  IF ( NB_LIG .LT. TOTLIGN ) THEN
C
	  CLIGNE ( J:J+ IAD1) = LINE_NAM ( 1 : NBCARL )
C               WRITE ( STDOUT , 302) CLIGNE ( J:J+ IAD1 )
302       FORMAT (/,  ' LINE NAME ====  ',A20 )
	  NB_LIG = NB_LIG + 1
	  J = J + NBCARL
C
				     ELSE
	  CALL UK_LOGMES ( C45 , LINE_NAME,NB_LIG,I2,I3,I4 )
	  ISTATUS = 1
	  RETURN
	  ENDIF
C
C
	GOTO 88


888     CONTINUE
C
C       SET FLAG IETADB OF COMMON   ETAT
C
	IF ( NB_LIG .GT. 0)  THEN
	 IETADB = 1
			    ELSE
	 IETADB = 0
	ENDIF

CC
	ISTATT = 0
C     GET  THE DEFAULT PROJECTION IDF FOR THE AREA
C
	 ISTATT = CTG_GET_DEFAULT_PROJECT (AREAPROJ )
C
C
	IF ( ISTATT .NE. 0 )  THEN
	CALL UK_LOGMES ( C34, AREAPROJ ,ISTATT , I2 , I3 , I4 )
	CALL UK_LOGMES ( C25, AREAPROJ , I1,I2,I3,I4 )
	ISTATUS = 8
	RETURN
	ENDIF
C
C     GET PROJECTION PARAMETERS FOR THE DEFAULT PROJECTION
C
      CALL CTG_GET_PROJECTION ( AREAPROJ,AR_TYPE,AR_ZONE,AR_SPHE,
     +            AR_UNIT,     AR_PARAM , ISTATT)
      IF ( ISTATT .NE. 0 ) THEN
      CALL UK_LOGMES ( C23 ,AREAPROJ , ISTATT , I2 , I3 ,I4 )
      CALL UK_LOGMES ( C25, AREA , I1 ,I2,I3,I4 )
      ISTATUS = 6
	RETURN
      ENDIF
C
      CALL UK_LOGMES ( C36 , AREAPROJ , I1 ,I2,I3,I4 )
C
C     GET PROJECTION PARAMETERS FOR THE DATA PROJECTION
C
      CALL UK_LOGMES ( C37 , DATAPROJ , I1 , I2,I3,I4 )
C
C
C
       CALL CTG_GET_PROJECTION ( DATAPROJ,DA_TYPE,DA_ZONE,DA_SPHE,
     +            DA_UNIT,      DA_PARAM , ISTATT)
      IF ( ISTATT .NE. 0 ) THEN
      CALL UK_LOGMES ( C24 ,DATAPROJ , ISTATT , I2 , I3 ,I4 )
      CALL UK_LOGMES ( C25, AREA , I1 ,I2,I3,I4 )
      ISTATUS = 6
      RETURN
      ENDIF
C
C    LOGICAL PROJCONV = TRUE IF DATA AND AREA  PROJECTION ARE
C     DIFFERENT WHICH WILL IMPLIES A CONVERSION
C
      IF(AREAPROJ (1:11) .EQ. DATAPROJ(1:11))  THEN
	    PROJCONV = .FALSE.
						ELSE
	    PROJCONV = .TRUE.
      ENDIF
C
C
C
C      INITIALIZING GLOBAL COORDINATES OF THE ZONE ENTERED
C       THIESE COORDINATES ARE STORED IN COMMON ETAT
C
	NEWMAX = -999999999.
	NEWMAY = -999999999.
	NEWMIX = 999999999.
	NEWMIY = 999999999.
C
C       SET NUMBER OF LINE ADDED TO THE DATA BASE TO ZERO
C
C
	NEWLINE = 0
C
C     MAXIMUM NUMBER OF BOGUS LINE ALLOWED BEFORE STOPPING
C
	MAXBOGUS = 10
C
C    REPLINE  NUMBER OF REPLACED LINE SET TO 0
C
	REPLINE = 0
C
C
	RETURN

999     CONTINUE
C
C      ERROR WHEN TRYING TO LOG INTO ORACLE
C

	CALL UK_LOGMES ( C17 , ORAC_ID,  ISTAT ,I2 ,I3 , I4 )
	CALL UK_LOGMES ( C25 , AREA ,  I1 ,I2 ,I3 , I4  )
	ISTATUS = 1

       RETURN
       END
