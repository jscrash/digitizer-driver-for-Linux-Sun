/* DEC/CMS REPLACEMENT HISTORY, Element LD_LM2_IMP_CULTURE_NEWLINE.PC */
/*  3    13-FEB-1992 17:08:57 PURNA "(SPR 1347) added ho_parse_pathname" */
/* *2     1-MAY-1991 21:53:09 KEE "(SPR -1) Landmark Import" */
/* *1     1-MAY-1991 21:15:34 KEE "Landmark Import & Export, Zycor Export and Mimic Export" */
/* DEC/CMS REPLACEMENT HISTORY, Element LD_LM2_IMP_CULTURE_NEWLINE.PC */
/******************************************************************************     */
/*                                                                                  */
/*                Copyright Finder Graphics Systems, Inc. 1989                      */
/*           Unpublished -- All rights reserved                                     */
/*                                                                                  */
/*THIS SOFTWARE IS THE PROPRIETARY PROPERTY OF Finder Graphics Systems, Inc.  AND   */
/*MAY CONTAIN CONFIDENTIAL TRADE SECRET INFORMATION. IT IS LICENSED FOR USE ON THE  */
/*DESIGNATED EQUIPMENT ON WHICH IT WAS ORIGINALLY INSTALLED AND  MAY NOT BE         */
/*MODIFIED, DUPLICATED OR COPIED IN ANY FORM WITHOUT PRIOR WRITTEN CONSENT OF       */
/*                                                                                  */
/*            Finder Graphics Systems, Inc.                                         */
/*            201 Tamal Vista Blvd                                                  */
/*            Corte Madera, CA  USA 94925                                           */
/*            (415) 927-0100                                                        */
/*                                                                                  */
/*(The above notice does not constitute an admission of publication or              */
/*unrestricted dissemination of the work)                                           */
/*                                                                                  */
/******************************************************************************     */

/* ************************************************************************

   NAME: LD_LM2_IMP_CULTURE_NEWLINE.PC

   AUTHOR: Rod Hanks
   DATE:   June 19th, 1990
   DESCRIPTION: Insert a new entry into the LINES table.

   ************************************************************************ */

#ifndef ESI_ORACLE_H
#include "esi_oracle.h"
#endif

#if USE_PROTOTYPES
publicdef VOID ld_lm2_imp_culture_newline (CHAR *lineColor, CHAR *fillColor, 
			  CHAR *project, CHAR *nlist_id, 
			  CHAR *polygonFlag, CHAR *full_filename)
#else
publicdef VOID ld_lm2_imp_culture_newline (lineColor, fillColor, project,
			    nlist_id, polygonFlag, full_filename)
CHAR		*lineColor;
CHAR		*fillColor;
CHAR		*project;
CHAR		*nlist_id;
CHAR		*polygonFlag;
CHAR		*full_filename;
#endif
    {
/****************************************************************************

	V a r i a b l e   D e c l a r a t i o n s .

******************************************************************************/

/*
				General variable declarations.
*/
    EXEC SQL BEGIN DECLARE SECTION;
        VARCHAR sqlstmt[500];
	VARCHAR	colorName[50];
	int	line_id;
	int	lineCode;
	int	polyCode;
    EXEC SQL END DECLARE SECTION;
/*
				Oracle variable declarations.
*/
/****************************************************************************

	I n i t i a l i z a t i o n .

******************************************************************************/

    EXEC SQL SELECT ESI.LYNX_ID_SEQ.NEXTVAL INTO :line_id
		     FROM DUAL;
    if (OR_STATUS != 0) ld_show_error(OR_STATUS, "close id_curs");
/*
				Get the next line id number.
*/
    lineCode = 0;
    V_FROMC(colorName, lineColor);
    EXEC SQL SELECT CODE INTO :lineCode FROM CODES.EXPRESSION_CODES
		 WHERE KEYWORD = 'COLOR' AND ENVIRONMENT = 'VMS'
		 AND   NAME = :colorName;
    if (OR_STATUS < SUCCESS) ld_show_error(OR_STATUS, "color decode");

    polyCode = 0;
    V_FROMC(colorName, fillColor);
    EXEC SQL SELECT CODE INTO :polyCode FROM CODES.EXPRESSION_CODES
		 WHERE KEYWORD = 'COLOR' AND ENVIRONMENT = 'VMS'
		 AND   NAME = :colorName;
    if (OR_STATUS < SUCCESS) ld_show_error(OR_STATUS, "color decode");

    sprintf(nlist_id, "%d", line_id);
    sqlstmt.len = sprintf((char *)sqlstmt.arr,
"INSERT INTO %s.LINES (LINE_ID, NLIST_ID, LINE_COLOR, LINE_STYLE, \
LINE_THICKNESS, LINE_NAME, POLYGON_FLAG, POLYGON_HATCH_STYLE, \
POLYGON_FILL_COLOR, NLIST_FILE) \
VALUES (%d, '%s', '%d', '1', '1.000000', NULL, '%s', \
'0', '%d', '%s')", project, line_id, nlist_id, lineCode, 
		   polygonFlag, polyCode, full_filename);

    EXEC SQL PREPARE S3 FROM :sqlstmt;
    if (OR_STATUS != 0) ld_show_error(OR_STATUS, "prepare s3");
    EXEC SQL EXECUTE S3;
    if (OR_STATUS != 0) ld_show_error(OR_STATUS, "execute s3");
    EXEC SQL COMMIT WORK;
    if (OR_STATUS != 0) ld_show_error(OR_STATUS, "commit s3");
/*
				Go ahead and insert into the LINES table.
				This reserves our line id for us.  We need
				to know it before we get started since it
				is also the name of the nlist we are going
				to create.
*/
    return;
    }
