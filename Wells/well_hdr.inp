; Generated by SQL*Forms Version 2.3.31 on Mon Jul 15 14:35:03 1991.
; Application owner is BILLA.  Application name is WELL_HDR.
; (Application ID is 0)
; -------------------------------------------------
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;* *14   12-JUL-1991 14:59:36 ALLAWAY "(SPR 7744) fix bugs from sprs 7744,777
;;7,7757,7778,7746"
;;* *13   11-JAN-1991 09:04:20 ALLAWAY "(SPR 6049) forgot to update version no
;;s, add message to key-print trigger"
;;* *12    9-JAN-1991 16:05:11 ALLAWAY "(SPR 6049) Update to support scout on
;;sun and host independant file names."
;;* *11   21-DEC-1990 13:24:02 ALLAWAY "(SPR 5515) Fix bug in Well_M_B page of
;; form"
;;* *10   26-NOV-1990 14:19:02 ALLAWAY "(SPR 5885) Fix operator field so that
;;it matches the column definition"
;;* *9    26-NOV-1990 13:23:58 ALLAWAY "(SPR 5885) Fix field length bugs"
;;* *8    26-OCT-1990 16:22:43 GILLESPIE "(SPR 33) Use LYNX_ID_SEQ instead of
;;NODE_ID_SEQ"
;;* *7    16-JUL-1990 18:43:39 ALLAWAY "(SPR -1) CHECKIN FOR 7-15-90 SCHEMA UP
;;DATE"
;;* *6     7-JUN-1990 07:32:41 ALLAWAY "(SPR 5505) FIX BUG IN STARTING SCOUT T
;;ICKETS"
;;* *5    25-MAY-1990 14:47:09 ALLAWAY "(SPR 5505) FIX FIELD SEQENCING PROBLEM
;;S"
;;* *4    24-MAY-1990 15:22:49 ALLAWAY "(SPR 505) FIX OMMISSION FROM KEY-START
;;UP.COM"
;;* *3    24-MAY-1990 14:56:40 ALLAWAY "(SPR 5505) FIXED BUG IN MOVING TO NEXT
;; FORM FROM LOCATION PAGES"
;;* *2    24-MAY-1990 13:45:26 ALLAWAY "(SPR 5505) Update for scout ticket sup
;;port and minor bug fixes"
;;* *1    23-MAY-1990 10:31:19 VINCE "Initial Checkin"
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;* *13   11-JAN-1991 09:04:20 ALLAWAY "(SPR 6049) forgot to update version no
;;s, add message to key-print trigger"
;;* *12    9-JAN-1991 16:05:11 ALLAWAY "(SPR 6049) Update to support scout on
;;sun and host independant file names."
;;* *11   21-DEC-1990 13:24:02 ALLAWAY "(SPR 5515) Fix bug in Well_M_B page of
;; form"
;;* *10   26-NOV-1990 14:19:02 ALLAWAY "(SPR 5885) Fix operator field so that
;;it matches the column definition"
;;* *9    26-NOV-1990 13:23:58 ALLAWAY "(SPR 5885) Fix field length bugs"
;;* *8    26-OCT-1990 16:22:43 GILLESPIE "(SPR 33) Use LYNX_ID_SEQ instead of
;;NODE_ID_SEQ"
;;* *7    16-JUL-1990 18:43:39 ALLAWAY "(SPR -1) CHECKIN FOR 7-15-90 SCHEMA UP
;;DATE"
;;* *6     7-JUN-1990 07:32:41 ALLAWAY "(SPR 5505) FIX BUG IN STARTING SCOUT T
;;ICKETS"
;;* *5    25-MAY-1990 14:47:09 ALLAWAY "(SPR 5505) FIX FIELD SEQENCING PROBLEM
;;S"
;;* *4    24-MAY-1990 15:22:49 ALLAWAY "(SPR 505) FIX OMMISSION FROM KEY-START
;;UP.COM"
;;* *3    24-MAY-1990 14:56:40 ALLAWAY "(SPR 5505) FIXED BUG IN MOVING TO NEXT
;; FORM FROM LOCATION PAGES"
;;* *2    24-MAY-1990 13:45:26 ALLAWAY "(SPR 5505) Update for scout ticket sup
;;port and minor bug fixes"
;;* *1    23-MAY-1990 10:31:19 VINCE "Initial Checkin"
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;* *11   21-DEC-1990 13:24:02 ALLAWAY "(SPR 5515) Fix bug in Well_M_B page of
;; form"
;;* *10   26-NOV-1990 14:19:02 ALLAWAY "(SPR 5885) Fix operator field so that
;;it matches the column definition"
;;* *9    26-NOV-1990 13:23:58 ALLAWAY "(SPR 5885) Fix field length bugs"
;;* *8    26-OCT-1990 16:22:43 GILLESPIE "(SPR 33) Use LYNX_ID_SEQ instead of
;;NODE_ID_SEQ"
;;* *7    16-JUL-1990 18:43:39 ALLAWAY "(SPR -1) CHECKIN FOR 7-15-90 SCHEMA UP
;;DATE"
;;* *6     7-JUN-1990 07:32:41 ALLAWAY "(SPR 5505) FIX BUG IN STARTING SCOUT T
;;ICKETS"
;;* *5    25-MAY-1990 14:47:09 ALLAWAY "(SPR 5505) FIX FIELD SEQENCING PROBLEM
;;S"
;;* *4    24-MAY-1990 15:22:49 ALLAWAY "(SPR 505) FIX OMMISSION FROM KEY-START
;;UP.COM"
;;* *3    24-MAY-1990 14:56:40 ALLAWAY "(SPR 5505) FIXED BUG IN MOVING TO NEXT
;; FORM FROM LOCATION PAGES"
;;* *2    24-MAY-1990 13:45:26 ALLAWAY "(SPR 5505) Update for scout ticket sup
;;port and minor bug fixes"
;;* *1    23-MAY-1990 10:31:19 VINCE "Initial Checkin"
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;* *9    26-NOV-1990 13:23:58 ALLAWAY "(SPR 5885) Fix field length bugs"
;;* *8    26-OCT-1990 16:22:43 GILLESPIE "(SPR 33) Use LYNX_ID_SEQ instead of
;;NODE_ID_SEQ"
;;* *7    16-JUL-1990 18:43:39 ALLAWAY "(SPR -1) CHECKIN FOR 7-15-90 SCHEMA UP
;;DATE"
;;* *6     7-JUN-1990 07:32:41 ALLAWAY "(SPR 5505) FIX BUG IN STARTING SCOUT T
;;ICKETS"
;;* *5    25-MAY-1990 14:47:09 ALLAWAY "(SPR 5505) FIX FIELD SEQENCING PROBLEM
;;S"
;;* *4    24-MAY-1990 15:22:49 ALLAWAY "(SPR 505) FIX OMMISSION FROM KEY-START
;;UP.COM"
;;* *3    24-MAY-1990 14:56:40 ALLAWAY "(SPR 5505) FIXED BUG IN MOVING TO NEXT
;; FORM FROM LOCATION PAGES"
;;* *2    24-MAY-1990 13:45:26 ALLAWAY "(SPR 5505) Update for scout ticket sup
;;port and minor bug fixes"
;;* *1    23-MAY-1990 10:31:19 VINCE "Initial Checkin"
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;* *8    26-OCT-1990 16:22:43 GILLESPIE "(SPR 33) Use LYNX_ID_SEQ instead of
;;NODE_ID_SEQ"
;;* *7    16-JUL-1990 18:43:39 ALLAWAY "(SPR -1) CHECKIN FOR 7-15-90 SCHEMA UP
;;DATE"
;;* *6     7-JUN-1990 07:32:41 ALLAWAY "(SPR 5505) FIX BUG IN STARTING SCOUT T
;;ICKETS"
;;* *5    25-MAY-1990 14:47:09 ALLAWAY "(SPR 5505) FIX FIELD SEQENCING PROBLEM
;;S"
;;* *4    24-MAY-1990 15:22:49 ALLAWAY "(SPR 505) FIX OMMISSION FROM KEY-START
;;UP.COM"
;;* *3    24-MAY-1990 14:56:40 ALLAWAY "(SPR 5505) FIXED BUG IN MOVING TO NEXT
;; FORM FROM LOCATION PAGES"
;;* *2    24-MAY-1990 13:45:26 ALLAWAY "(SPR 5505) Update for scout ticket sup
;;port and minor bug fixes"
;;* *1    23-MAY-1990 10:31:19 VINCE "Initial Checkin"
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;* *4    24-MAY-1990 15:22:49 ALLAWAY "(SPR 505) FIX OMMISSION FROM KEY-START
;;UP.COM"
;;* *3    24-MAY-1990 14:56:40 ALLAWAY "(SPR 5505) FIXED BUG IN MOVING TO NEXT
;; FORM FROM LOCATION PAGES"
;;* *2    24-MAY-1990 13:45:26 ALLAWAY "(SPR 5505) Update for scout ticket sup
;;port and minor bug fixes"
;;* *1    23-MAY-1990 10:31:19 VINCE "Initial Checkin"
;;* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP
;;This form is designed to be run from the Finder program.  It displays
;;information about a well, and interacts with the Finder mapping software.
;Application Title :
FINDER WELL INFORMATION
;ORACLE workspace size :

;Block name / Description :
**PRE-FORM
;SQL>
#COPY GLOBAL.PROJECT :CONTROL1.PROJECT
/
;Message if value not found :

;Must value exist Y/N :
N
#COPY GLOBAL.LIST_NAME :CONTROL1.SELECT_LIST_NAME
/
;Message if value not found :

;Must value exist Y/N :
Y
#COPY GLOBAL.STRATCOL :CONTROL1.STRATCOL
/
;Message if value not found :

;Must value exist Y/N :
Y
#COPY GLOBAL.OWNER :CONTROL1.OWNER
/
;Message if value not found :

;Must value exist Y/N :
Y
SELECT USER,SYSDATE
INTO CONTROL1.USER_NAME, CONTROL1.TODAY
FROM DUAL
/
;Message if value not found :

;Must value exist Y/N :
Y
SELECT 'X' FROM DUAL
WHERE :CONTROL1.PROJECT = 'DEFAULT_PROJECT'
/
;Message if value not found :
Project mismatch detected - This form is for DEFAULT_PROJECT ONLY
;Must value exist Y/N :
N
#COPY 'NONHEADER' GLOBAL.HDRBLK

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**POST-BLOCK
;SQL>
#COPY 'NONHEADER' GLOBAL.HDRBLK

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**PRE-QUERY
;SQL>
#COPY 'QUERY' GLOBAL.SW

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**KEY-CLRREC
;SQL>
#EXEMACRO CASE GLOBAL.HDRBLK IS
WHEN 'HEADER' THEN CLRREC;NXTBLK;CLRBLK;PRVREC;
WHEN OTHERS THEN NULL;
END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**KEY-ENTQRY
;SQL>
#COPY 'QUERY' GLOBAL.SW
/
;Message if value not found :

;Must value exist Y/N :
Y
#EXEMACRO CASE GLOBAL.UWI IS
 WHEN 'NONE' THEN NULL;WHEN '' THEN NULL;
 WHEN OTHERS THEN COPY GLOBAL.UWI INTO CONTROL1.UWI;
 END CASE;
/
;Message if value not found :

;Must value exist Y/N :
Y
#EXEMACRO CASE GLOBAL.HDRBLK IS
WHEN 'HEADER' THEN ENTQRY;EXETRG FILL_DETAIL;
WHEN OTHERS THEN ENTQRY;
END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**KEY-EXEQRY
;SQL>
#EXEMACRO CASE GLOBAL.HDRBLK IS
WHEN 'HEADER' THEN EXEQRY;EXETRG FILL_DETAIL;
WHEN OTHERS THEN EXEQRY;
END CASE;
/
;Message if value not found :

;Must value exist Y/N :
Y
#COPY '' CONTROL1.UWI

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**KEY-EXIT
;SQL>
#EXEMACRO CASE GLOBAL.SW IS
WHEN 'QUERY' THEN NULL;
WHEN OTHERS THEN EXETRG LEAVE_FORM;
END CASE;EXIT;

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**KEY-NXTREC
;SQL>
#EXEMACRO CASE GLOBAL.HDRBLK IS
WHEN 'HEADER' THEN NXTREC;EXETRG FILL_DETAIL;
WHEN OTHERS THEN NXTREC;
END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**KEY-PRINT
;SQL>
#EXEMACRO CASE :HEADER.UWI IS
WHEN '' THEN MESSAGE 'No current well. Can not print Scout Ticket';
WHEN OTHERS THEN COPY HEADER.UWI INTO GLOBAL.SCOUT_UWI;
EXETRG START_SCOUT;
END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**KEY-PRVREC
;SQL>
#EXEMACRO CASE GLOBAL.HDRBLK IS
WHEN 'HEADER' THEN PRVREC;EXETRG FILL_DETAIL;
WHEN OTHERS THEN PRVREC;
END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**KEY-STARTUP
;SQL>
#EXEMACRO COPY GLOBAL.LASTFORM INTO CONTROL1.LASTFORM;
COPY GLOBAL.LASTFORMSEQ INTO CONTROL1.LASTFORMSEQ;
/
;Message if value not found :
Unable to initialize LASTFORM and LASTFORMSEQ.
;Must value exist Y/N :
N
#EXEMACRO COPY GLOBAL.CURRFORMSEQ INTO CONTROL1.CURRFORMSEQ;
COPY GLOBAL.CURRFORM INTO CONTROL1.CURRFORM;
/
;Message if value not found :
UNABLE TO INITIALIZE CURRFORM AND CURRFORMSEQ.
;Must value exist Y/N :
N
#EXEMACRO COPY GLOBAL.NXTFORMSEQ INTO CONTROL1.NXTFORMSEQ;
COPY GLOBAL.NXTFORM INTO CONTROL1.NXTFORM;
/
;Message if value not found :
UNABLE TO INITIALIZE NXTFORM AND NXTFORMSEQ.
;Must value exist Y/N :
N
#EXEMACRO COPY GLOBAL.PRVFORMSEQ INTO CONTROL1.PRVFORMSEQ;
COPY GLOBAL.PRVFORM INTO CONTROL1.PRVFORM;
/
;Message if value not found :
UNABLE TO INITIALIZE PRVFORM AND PRVFORMSEQ.
;Must value exist Y/N :
N
#COPY GLOBAL.FORMSEQMIN CONTROL1.FORMSEQMIN
/
;Message if value not found :
UNABLE TO INITIALIZE FORMSEQMIN.
;Must value exist Y/N :
N
#COPY GLOBAL.FORMSEQMAX CONTROL1.FORMSEQMAX
/
;Message if value not found :
UNABLE TO INITIALIZE FORMSEQMAX.
;Must value exist Y/N :
N
#COPY GLOBAL.CONTROL_ID CONTROL1.CONTROL_ID
/
;Message if value not found :
UNABLE TO INITIALIZE CONTROL_ID
;Must value exist Y/N :
N
#COPY GLOBAL.PRV_FORM_FLAG CONTROL1.PRV_FORM_FLAG
/
;Message if value not found :
UNABLE TO INITIALIZE PRV_FORM_FLAG
;Must value exist Y/N :
N
#COPY GLOBAL.SCOUT_CMD_STRING CONTROL1.SCOUT_CMD_STRING
/
;Message if value not found :
UNABLE TO INITIALIZE SCOUT_CMD_STRING
;Must value exist Y/N :
N
#EXEMACRO CASE GLOBAL.UWI IS
WHEN 'NONE' THEN NULL;WHEN '' THEN NULL;
WHEN OTHERS THEN COPY GLOBAL.UWI INTO CONTROL1.UWI;
END CASE;
/
;Message if value not found :
UNABLE TO INITIALIZE UWI
;Must value exist Y/N :
N
SELECT 'X' FROM DUAL
WHERE :CONTROL1.LASTFORM = 'NULL'
/
;Message if value not found :
$INITLAST $CHECKPRV 
;Must value exist Y/N :
N
$INITLAST
SELECT 'X' FROM DUAL
WHERE :CONTROL1.CURRFORMSEQ = :CONTROL1.FORMSEQMIN
/
;Message if value not found :
$LASTLAST $MIDLAST 
;Must value exist Y/N :
N
$LASTLAST
SELECT FILE_NAME,SEQ INTO CONTROL1.LASTFORM,CONTROL1.LASTFORMSEQ
FROM DEFAULT_PROJECT.ORACLE_APP_SELECTION
WHERE :CONTROL1.CONTROL_ID = PRIMARY_ID AND
SEQ = :CONTROL1.FORMSEQMAX
/
;Message if value not found :
$CHECKPRV $CHECKPRV 
;Must value exist Y/N :
N
$MIDLAST
SELECT FILE_NAME,SEQ INTO CONTROL1.LASTFORM,CONTROL1.LASTFORMSEQ
FROM DEFAULT_PROJECT.ORACLE_APP_SELECTION
WHERE :CONTROL1.CONTROL_ID = PRIMARY_ID AND
SEQ = :CONTROL1.CURRFORMSEQ-1
/
;Message if value not found :

;Must value exist Y/N :
N
$CHECKPRV
SELECT 'X' FROM DUAL
WHERE :CONTROL1.PRVFORM = 'NULL'
/
;Message if value not found :
$INITPRV $CHECKNXT 
;Must value exist Y/N :
N
$INITPRV
SELECT 'X' FROM DUAL
WHERE :CONTROL1.CURRFORMSEQ = :CONTROL1.FORMSEQMIN
/
;Message if value not found :
$FIRSTFORM $MIDFORMPRV 
;Must value exist Y/N :
N
$FIRSTFORM
SELECT FILE_NAME,SEQ INTO :CONTROL1.PRVFORM,:CONTROL1.PRVFORMSEQ
FROM DEFAULT_PROJECT.ORACLE_APP_SELECTION
WHERE PRIMARY_ID = :CONTROL1.CONTROL_ID
AND SEQ = :CONTROL1.FORMSEQMAX
/
;Message if value not found :
$CHECKNXT $CHECKNXT 
;Must value exist Y/N :
N
$MIDFORMPRV
SELECT FILE_NAME,SEQ INTO :CONTROL1.PRVFORM,:CONTROL1.PRVFORMSEQ
FROM DEFAULT_PROJECT.ORACLE_APP_SELECTION
WHERE PRIMARY_ID = :CONTROL1.CONTROL_ID AND SEQ = :CONTROL1.CURRFORMSEQ-1
/
;Message if value not found :

;Must value exist Y/N :
N
$CHECKNXT
SELECT 'X' FROM DUAL
WHERE :CONTROL1.NXTFORM = 'NULL'
/
;Message if value not found :
$INITNXT $END 
;Must value exist Y/N :
N
$INITNXT
SELECT 'X' FROM DUAL
WHERE :CONTROL1.CURRFORMSEQ = :CONTROL1.FORMSEQMAX
/
;Message if value not found :
$LASTFORM $MIDFORMNXT 
;Must value exist Y/N :
N
$LASTFORM
SELECT FILE_NAME,SEQ INTO :CONTROL1.NXTFORM,:CONTROL1.NXTFORMSEQ
FROM DEFAULT_PROJECT.ORACLE_APP_SELECTION
WHERE PRIMARY_ID = :CONTROL1.CONTROL_ID AND SEQ = :CONTROL1.FORMSEQMIN
/
;Message if value not found :
$END $END 
;Must value exist Y/N :
N
$MIDFORMNXT
SELECT FILE_NAME,SEQ INTO :CONTROL1.NXTFORM,:CONTROL1.NXTFORMSEQ
FROM DEFAULT_PROJECT.ORACLE_APP_SELECTION
WHERE PRIMARY_ID = :CONTROL1.CONTROL_ID AND SEQ = :CONTROL1.CURRFORMSEQ+1
/
;Message if value not found :

;Must value exist Y/N :
N
$END
#EXEMACRO ENDTRIG;

;Message if value not found :

;Must value exist Y/N :
N
;Block name / Description :
**DO_LAUNCH
;SQL>
#COPY '' GLOBAL.LAUNCH_FORM
/
;Message if value not found :
Unable to initialize the launch form variable.
;Must value exist Y/N :
Y
##ADDPATH ESI$FORMS :GLOBAL.GO_FORM GLOBAL.LAUNCH_FORM
/
;Message if value not found :
Unable to add pathname to form name.
;Must value exist Y/N :
Y
#EXEMACRO CASE GLOBAL.LAUNCH_TYPE IS
WHEN 'CALL' THEN CALL &GLOBAL.LAUNCH_FORM;
WHEN 'NEWFRM' THEN NEWFRM &GLOBAL.LAUNCH_FORM;
WHEN OTHERS THEN MESSAGE 'Uninitialized LAUNCH_TYPE variable.';
END CASE;

;Message if value not found :
Unable to perform launch of form.
;Must value exist Y/N :
Y
;Block name / Description :
**FILL_DETAIL
;SQL>
#COPY SYSTEM.CURRENT_BLOCK||'.UWI' GLOBAL.CURRIDFLD
/
;Message if value not found :

;Must value exist Y/N :
N
#EXEMACRO CASE &GLOBAL.CURRIDFLD IS
WHEN '' THEN NXTBLK;CLRBLK;
WHEN OTHERS THEN NXTBLK;EXEQRY;
END CASE;PRVBLK;

;Message if value not found :

;Must value exist Y/N :
N
;Block name / Description :
**GO_NXT_FORM
;SQL>
#EXEMACRO COPY CONTROL1.NXTFORM INTO GLOBAL.CURRFORM;
COPY CONTROL1.NXTFORMSEQ INTO GLOBAL.CURRFORMSEQ;
COPY CONTROL1.CURRFORM INTO GLOBAL.PRVFORM;
COPY CONTROL1.CURRFORMSEQ INTO GLOBAL.PRVFORMSEQ;
COPY 'NULL' INTO GLOBAL.NXTFORM;COPY '999' INTO GLOBAL.NXTFORMSEQ;
/
;Message if value not found :

;Must value exist Y/N :
Y
#EXEMACRO COPY 'NEWFRM' INTO GLOBAL.LAUNCH_TYPE;
COPY CONTROL1.NXTFORM INTO GLOBAL.GO_FORM;
EXETRG LEAVE_FORM;EXETRG DO_LAUNCH;

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**GO_PRV_FORM
;SQL>
#EXEMACRO CASE :CONTROL1.PRV_FORM_FLAG IS
WHEN 'LAST' THEN EXETRG MAKE_LAST_CURR;
WHEN OTHERS THEN EXETRG MAKE_PRV_CURR;
END CASE;
/
;Message if value not found :
Failed to make the last form current.
;Must value exist Y/N :
Y
#EXEMACRO COPY 'NEWFRM' INTO GLOBAL.LAUNCH_TYPE;
CASE :CONTROL1.PRV_FORM_FLAG IS
WHEN 'LAST' THEN COPY CONTROL1.LASTFORM INTO GLOBAL.GO_FORM;
WHEN OTHERS THEN COPY CONTROL1.PRVFORM INTO GLOBAL.GO_FORM;
END CASE;EXETRG LEAVE_FORM;EXETRG DO_LAUNCH;

;Message if value not found :
Failed to launch previous form.
;Must value exist Y/N :
Y
;Block name / Description :
**LEAVE_FORM
;SQL>
#EXEMACRO
COPY CONTROL1.CURRFORM INTO GLOBAL.LASTFORM;
COPY CONTROL1.CURRFORMSEQ INTO GLOBAL.LASTFORMSEQ;
COPY CONTROL1.PRV_FORM_FLAG INTO GLOBAL.PRV_FORM_FLAG;
CASE :HEADER.UWI IS WHEN '' THEN NULL;
WHEN OTHERS THEN COPY HEADER.UWI INTO GLOBAL.UWI;
END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**MAKE_LAST_CURR
;SQL>
#EXEMACRO COPY CONTROL1.LASTFORM INTO GLOBAL.CURRFORM;
COPY CONTROL1.LASTFORMSEQ INTO GLOBAL.CURRFORMSEQ;
COPY CONTROL1.LASTFORM INTO GLOBAL.PRVFORM;COPY CONTROL1.LASTFORMSEQ INTO
GLOBAL.PRVFORMSEQ;COPY CONTROL1.CURRFORM INTO GLOBAL.NXTFORM;
COPY CONTROL1.CURRFORMSEQ INTO GLOBAL.NXTFORMSEQ;

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**MAKE_PRV_CURR
;SQL>
#EXEMACRO COPY CONTROL1.PRVFORM INTO GLOBAL.CURRFORM;
COPY CONTROL1.PRVFORMSEQ INTO GLOBAL.CURRFORMSEQ;
COPY CONTROL1.CURRFORM INTO GLOBAL.NXTFORM;
COPY CONTROL1.CURRFORMSEQ INTO GLOBAL.NXTFORMSEQ;
COPY 'NULL' INTO GLOBAL.PRVFORM;COPY '999' INTO GLOBAL.PRVFORMSEQ;

;Message if value not found :

;Must value exist Y/N :
Y
;Block name / Description :
**START_SCOUT
;SQL>
$GET_LOGIN
#EXEMACRO CASE GLOBAL.SCOUT_CMD_STRING IS
WHEN '' THEN COPY 'scout_login' INTO GLOBAL.GO_FORM;
        COPY 'CALL' INTO GLOBAL.LAUNCH_TYPE;
        EXETRG DO_LAUNCH;
WHEN OTHERS THEN NULL;
END CASE;
/
;Message if value not found :
Unable to start login form. Scout tickets can not be accessed.
;Must value exist Y/N :
Y
#COPY GLOBAL.SCOUT_CMD_STRING CONTROL1.SCOUT_CMD_STRING
/
;Message if value not found :

;Must value exist Y/N :
Y
$SUBMIT_IT
#EXEMACRO COPY 'scout_control' INTO GLOBAL.GO_FORM;
COPY 'CALL' INTO GLOBAL.LAUNCH_TYPE;
EXETRG DO_LAUNCH;

;Message if value not found :
Unable to launch the scout ticket control form.
;Must value exist Y/N :
Y
;Block name / Description :
*HEADER/Well Header Information
;Enter default WHERE and ORDER BY clause :
WHERE ((&CONTROL1.SELECT_LIST_NAME IS NULL) OR
 (&CONTROL1.SELECT_LIST_NAME IS NOT NULL AND UWI IN
    (SELECT KEY_UWI FROM TEMP_WELL_LISTS
        WHERE TEMP_PROCESS_ID = USERENV('SESSIONID')
    AND TEMP_LIST_NAME=&CONTROL1.SELECT_LIST_NAME)))
ORDER BY WELL_NAME

;Table name :
DEFAULT_PROJECT.WELL_HDR
;Check for uniqueness before inserting Y/N :
Y
;Display/Buffer how many records :
1 / 30
;Field name :
*PRE-BLOCK
;SQL>
#COPY 'OTHER' GLOBAL.SW
/
;Message if value not found :

;Must value exist Y/N :
Y
#COPY 'N' GLOBAL.FILL_SHORT

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*PRE-QUERY
;SQL>
#EXEMACRO
CASE GLOBAL.SW IS
  WHEN 'GETUWI' THEN EXETRG GET_UWI;
  WHEN OTHERS THEN NULL;
END CASE;
/
;Message if value not found :

;Must value exist Y/N :
Y
#COPY 'QUERY' GLOBAL.SW
/
;Message if value not found :

;Must value exist Y/N :
Y
#COPY GLOBAL.UWI CONTROL1.UWI

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*POST-QUERY
;SQL>
#COPY '' CONTROL1.UWI

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*PRE-INSERT
;SQL>
#COPY CONTROL1.OWNER HEADER.PRIMARY_SOURCE
/
;Message if value not found :

;Must value exist Y/N :
Y
#COPY CONTROL1.TODAY HEADER.LAST_UPDATE
/
;Message if value not found :

;Must value exist Y/N :
Y
#EXEMACRO CASE :GLOBAL.FILL_SHORT IS
WHEN 'Y' THEN EXETRG FILL_SHORT;
WHEN OTHERS THEN NULL;
END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*PRE-UPDATE
;SQL>
#COPY CONTROL1.OWNER HEADER.PRIMARY_SOURCE
/
;Message if value not found :

;Must value exist Y/N :
Y
#COPY CONTROL1.TODAY HEADER.LAST_UPDATE
/
;Message if value not found :

;Must value exist Y/N :
Y
#EXEMACRO CASE :GLOBAL.FILL_SHORT IS
WHEN 'Y' THEN EXETRG FILL_SHORT;
WHEN OTHERS THEN NULL;
END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-CQUERY
;SQL>
#EXEMACRO CASE GLOBAL.FORM_MODE IS
 WHEN 'STAND' THEN CQUERY;ENDTRIG;
 WHEN OTHERS THEN COPY 'GETUWI' INTO GLOBAL.SW;
 END CASE;
/
;Message if value not found :

;Must value exist Y/N :
Y
#EXEMACRO EXEQRY; EXETRG FILL_NODES;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-CREREC
;SQL>
#EXEMACRO GOFLD CONTROL1.UWI;CLRFLD;GOBLK HEADER;
CREREC; GOBLK NODES; CREREC; GOBLK HEADER;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-DELREC
;SQL>
#EXEMACRO DELREC; EXETRG FILL_NODES;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-ENTQRY
;SQL>
#COPY 'QUERY' GLOBAL.SW
/
;Message if value not found :

;Must value exist Y/N :
Y
#COPY GLOBAL.UWI CONTROL1.UWI
/
;Message if value not found :

;Must value exist Y/N :
Y
#EXEMACRO GOBLK NODES;CLRBLK;GOBLK HEADER;ENTQRY; EXETRG FILL_NODES;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-EXEQRY
;SQL>
#EXEMACRO EXEQRY; EXETRG FILL_NODES;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-NXTBLK
;SQL>
#EXEMACRO CASE :HEADER.LOCATION_TABLE IS
WHEN 'WELL_LOCATIONS' THEN GOBLK WELL_LOCATIONS;EXEQRY;
WHEN 'WELL_TEXAS_LOC' THEN GOBLK WELL_TEXAS_LOC;EXEQRY;
WHEN 'WELL_M_B' THEN GOBLK WELL_M_B;EXEQRY;
WHEN OTHERS THEN EXETRG GO_NXT_FORM;END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-NXTREC
;SQL>
#EXEMACRO NXTREC; EXETRG FILL_NODES;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-PRVBLK
;SQL>
#EXEMACRO EXETRG GO_PRV_FORM;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-PRVREC
;SQL>
#EXEMACRO PRVREC; EXETRG FILL_NODES;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*FILL_NODES
;SQL>
#EXEMACRO GOBLK NODES; CASE HEADER.NODE_ID IS
  WHEN '' THEN CLRBLK;
  WHEN OTHERS THEN EXEQRY;EXETRG FILL_OTHER_LOC;
END CASE; GOBLK HEADER;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*FILL_SHORT
;SQL>
SELECT SUBSTR(:HEADER.WELL_NAME,1,20)
INTO HEADER.SHORT_NAME
FROM DUAL

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*GET_UWI
;SQL>
#DD_GETUWI HEADER.UWI

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
UWI
;Type of field :
CHAR
;Length of field / Display length / Query length :
20 / 20 / 255
;Is this field in the base table Y/N :
*Y
;Is this field part of the primary key Y/N :
Y
;Field to copy primary key from :
CONTROL1.UWI
;Page :
2
;Line :
4
;Column :
7
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
N
;SQL>
**KEY-PRVFLD
/
;SQL>
#EXEMACRO GOFLD LEASE_NAME;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
Y
;Convert field to upper case Y/N :
Y
;Help message :
UWI is the Unique Well Identifier.
;Lowest value :

;Highest value :

;Field name :
WELL_NAME
;Type of field :
CHAR
;Length of field / Display length / Query length :
30 / 27 / 30
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
4
;Column :
39
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**POST-CHANGE
/
;SQL>
#EXEMACRO CASE GLOBAL.SW IS
WHEN 'QUERY' THEN NULL;
WHEN OTHERS THEN COPY 'Y' INTO GLOBAL.FILL_SHORT;
END CASE;

;Message if value not found :

;Must value exist Y/N :
N
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Name of well (lease name)
;Lowest value :

;Highest value :

;Field name :
WELL_NUMBER
;Type of field :
CHAR
;Length of field / Display length / Query length :
15 / 12 / 15
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
4
;Column :
67
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
This is the well number (separate from well name)
;Lowest value :

;Highest value :

;Field name :
CRSTATUS
;Type of field :
CHAR
;Length of field / Display length / Query length :
65 / 25 / 65
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
5
;Column :
15
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**POST-CHANGE
/
;SQL>
#EXEMACRO CASE GLOBAL.SW IS
WHEN 'QUERY' THEN NULL;
WHEN OTHERS THEN EXETRG FILL_PLOT_SYM;
END CASE;
/
;Message if value not found :

;Must value exist Y/N :
Y
;SQL>
**FILL_PLOT_SYM
/
;SQL>
SELECT SYMBOL INTO HEADER.PLOT_SYMBOL
FROM CODES.WELL_STATUS_CODES
WHERE STATUS = :HEADER.CRSTATUS

;Message if value not found :
This well status is invalid. Try [LIST_VALUES] (esc V on VT100)
;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Well Status (e.g. Drilling or Suspended)Try [List Values]
;Lowest value :
@CODES.WELL_STATUS_CODES.STATUS
;Field name :
COLOR
;Type of field :
CHAR
;Length of field / Display length / Query length :
30 / 12 / 30
;Is this field in the base table Y/N :
N
;Default value :
BLUE
;Page :
2
;Line :
5
;Column :
67
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**POST-CHANGE
/
;SQL>
#EXEMACRO CASE GLOBAL.SW IS
WHEN 'QUERY' THEN NULL;
WHEN OTHERS THEN EXETRG CHECK_COL;
END CASE;
/
;Message if value not found :

;Must value exist Y/N :
Y
;SQL>
**CHECK_COL
/
;SQL>
SELECT NAME
INTO HEADER.COLOR
FROM CODES.EXPRESSION_CODES
WHERE KEYWORD='COLOR' AND NAME LIKE :HEADER.COLOR||'%'

;Message if value not found :
No such color exists.  Try [LIST_VALUES] - esc-V on a VT100
;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Color used to digitize new well locations
;Lowest value :
@CODES.COLOR_CODES.NAME
;Field name :
DIGITIZE_TOP
;Type of field :
CHAR
;Length of field / Display length / Query length :
1 / 1 / 1
;Is this field in the base table Y/N :
N
;Default value :

;Page :
2
;Line :
6
;Column :
2
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**POST-CHANGE
/
;SQL>
#EXEMACRO CASE GLOBAL.SW IS
WHEN 'QUERY' THEN NULL;
WHEN OTHERS THEN CASE GLOBAL.FORM_MODE IS
WHEN 'STAND' THEN ENDTRIG FAIL MESSAGE 'You must be in Finder to do that.';
WHEN OTHERS THEN EXETRG GO_DIG;END CASE;END CASE;
/
;Message if value not found :
You must be in Finder to digitize wells. Clear the field to continue.
;Must value exist Y/N :
Y
;SQL>
**KEY-NXTFLD
/
;SQL>
#EXEMACRO GOFLD NODES.NODE_ID;
/
;Message if value not found :

;Must value exist Y/N :
Y
;SQL>
**GO_DIG
/
;SQL>
#DD_DIGEXIT NODES.NODE_X NODES.NODE_Y HEADER.UWI HEADER.PLOT_SYMBOL
HEADER.COLOR
/
;Message if value not found :
Unable to digitize well location
;Must value exist Y/N :
Y
#COPY '' HEADER.DIGITIZE_TOP
/
;Message if value not found :

;Must value exist Y/N :
Y
#EXEMACRO CASE HEADER.NODE_ID IS
  WHEN '' THEN EXETRG MOVE_NODE_ID;
  END CASE;
/
;Message if value not found :

;Must value exist Y/N :
Y
#EXEMACRO MESSAGE 'Well digitized successfully.';
/
;Message if value not found :

;Must value exist Y/N :
Y
;SQL>
**MOVE_NODE_ID
/
;SQL>
SELECT ESI.LYNX_ID_SEQ.NEXTVAL INTO HEADER.NODE_ID FROM DUAL
/
;Message if value not found :

;Must value exist Y/N :
Y
#COPY HEADER.NODE_ID NODES.NODE_ID

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
Y
;Auto jump to next field Y/N :
Y
;Convert field to upper case Y/N :
Y
;Help message :
Enter any character to digitize X,Y     NOTE: You must have a map displayed.
;Lowest value :

;Highest value :

;Field name :
TOP_DELTA_X
;Type of field :
NUMBER
;Length of field / Display length / Query length :
11 / 11 / 0
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :
0.0
;Page :
2
;Line :
9
;Column :
10
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**KEY-PRVFLD
/
;SQL>
#EXEMACRO GOFLD NODES.NODE_Y;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Offset in X direction from common node
;Lowest value :

;Highest value :

;Field name :
TOP_DELTA_Y
;Type of field :
NUMBER
;Length of field / Display length / Query length :
11 / 11 / 0
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :
0.0
;Page :
2
;Line :
9
;Column :
28
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**KEY-NXTFLD
/
;SQL>
#EXEMACRO GOFLD NODES.LATITUDE;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Offset in Y direction from common node  (+ = north, - = south)
;Lowest value :

;Highest value :

;Field name :
LOCATION_TABLE
;Type of field :
CHAR
;Length of field / Display length / Query length :
30 / 21 / 30
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
7
;Column :
58
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**KEY-PRVFLD
/
;SQL>
#EXEMACRO GOFLD NODES.LONGITUDE;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Name of table that contains legal description for this well. Use ESC-V for list.
;Lowest value :
@CODES.WELL_LOC_TABLES.LOCATION_TABLE
;Field name :
PLOT_SYMBOL
;Type of field :
INT
;Length of field / Display length / Query length :
3 / 3 / 0
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :
27
;Page :
2
;Line :
8
;Column :
58
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Finder plot symbol used to mark the well position.  Usually set by well status
;Lowest value :
1
;Highest value :
99
;Field name :
DEVIATION_FLAG
;Type of field :
CHAR
;Length of field / Display length / Query length :
1 / 1 / 1
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
8
;Column :
72
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**KEY-NXTFLD
/
;SQL>
#EXEMACRO GOFLD NODES.SOURCE;
/
;Message if value not found :

;Must value exist Y/N :
Y
;SQL>
**POST_CHANGE
/
;SQL>
SELECT 'X' FROM DUAL
WHERE :HEADER.DEVIATION_FLAG IN ('+','-')

;Message if value not found :
Valid characters for Finder are '+' and '-'
;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
Y
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
+ = Deviation survey available; - = Well deviated but no survey data available
;Lowest value :

;Highest value :

;Field name :
OTHER_LOC
;Type of field :
CHAR
;Length of field / Display length / Query length :
240 / 78 / 240
;Is this field in the base table Y/N :
N
;Default value :

;Page :
2
;Line :
12
;Column :
2
;Prompt :

;Allow field to be entered Y/N :
*N
;Allow entry of query condition Y/N :
Y
;SQL>
**KEY-PRVFLD
/
;SQL>
#EXEMACRO GOFLD NODES.LOC_QUAL;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
BASE_DELTA_X
;Type of field :
NUMBER
;Length of field / Display length / Query length :
10 / 10 / 10
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :
0.0
;Page :
2
;Line :
14
;Column :
8
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**POST-CHANGE
/
;SQL>
#EXEMACRO CASE GLOBAL.SW IS
WHEN 'QUERY' THEN NULL;
WHEN OTHERS THEN EXETRG FILL_DEV_FLAG;
END CASE;
/
;Message if value not found :

;Must value exist Y/N :
Y
;SQL>
**FILL_DEV_FLAG
/
;SQL>
SELECT '-' INTO :HEADER.DEVIATION_FLAG FROM DUAL
WHERE :HEADER.DEVIATION_FLAG IS NULL
AND :HEADER.BASE_DELTA_X != :HEADER.TOP_DELTA_X

;Message if value not found :

;Must value exist Y/N :
N
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :

;Lowest value :

;Highest value :

;Field name :
BASE_DELTA_Y
;Type of field :
NUMBER
;Length of field / Display length / Query length :
10 / 10 / 10
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :
0.0
;Page :
2
;Line :
14
;Column :
26
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :

;Lowest value :

;Highest value :

;Field name :
OPERATOR
;Type of field :
CHAR
;Length of field / Display length / Query length :
12 / 12 / 12
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
16
;Column :
15
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**POST-CHANGE
/
;SQL>
;;The meaning and use of the operator field has shifted to indicate it is a
;;code field rather than the long name of the operator.  The table lookup
;;is thus no longer desirable or necessary. I am leaving everything in place
;;to put it back in case I need to do so at a later date.
#EXEMACRO CASE GLOBAL.SW IS
WHEN 'QUERY' THEN NULL;
WHEN OTHERS THEN NULL;
END CASE;
/
;Message if value not found :
WHEN OTHERS USED TO READ: WHEN OTHERS THEN EXETRG OP_LOOKUP;
;Must value exist Y/N :
Y
;SQL>
**OP_LOOKUP
/
;SQL>
SELECT CORRECT_NAME
INTO HEADER.OPERATOR
FROM DEFAULT_PROJECT.OPERATOR_ALIAS
WHERE ENTERED_NAME = :HEADER.OPERATOR

;Message if value not found :
WARNING - No such operator name exists in the OPERATOR_ALIAS table
;Must value exist Y/N :
N
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
Y
;Convert field to upper case Y/N :
Y
;Help message :
Enter name of operator (may abbreviate)
;Lowest value :
@DEFAULT_PROJECT.OPERATOR_ALIAS.CORRECT_NAME
;Field name :
DRILLERS_TD
;Type of field :
NUMBER
;Length of field / Display length / Query length :
12 / 12 / 22
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
17
;Column :
15
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
Y
;Convert field to upper case Y/N :
N
;Help message :
Drillers Total Depth (down-hole)
;Lowest value :
0
;Highest value :
30000
;Field name :
TVD
;Type of field :
NUMBER
;Length of field / Display length / Query length :
22 / 12 / 22
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
18
;Column :
15
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
True vertical depth of well at TD
;Lowest value :

;Highest value :

;Field name :
TD_AGE_CODE
;Type of field :
CHAR
;Length of field / Display length / Query length :
6 / 6 / 6
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
19
;Column :
15
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
Y
;Convert field to upper case Y/N :
Y
;Help message :
The PI age code of the Formation at Total Depth
;Lowest value :
000
;Highest value :
800
;Field name :
FORM_AT_TD
;Type of field :
CHAR
;Length of field / Display length / Query length :
12 / 12 / 0
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
19
;Column :
22
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**POST-CHANGE
/
;SQL>
#EXEMACRO CASE GLOBAL.SW IS
WHEN 'QUERY' THEN NULL;
WHEN OTHERS THEN EXETRG GET_DISPLAY;
END CASE;
/
;Message if value not found :

;Must value exist Y/N :
Y
;SQL>
**GET_DISPLAY
/
;SQL>
SELECT DISPLAY
INTO TDNAME
FROM DEFAULT_PROJECT.LITHOSTRAT_CODES LITH
WHERE :HEADER.FORM_AT_TD = LITH.CODE

;Message if value not found :
This TD formation not entered in LITHOSTRAT_CODES Table
;Must value exist Y/N :
N
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
Y
;Convert field to upper case Y/N :
Y
;Help message :
The PI code for the formation at total depth
;Lowest value :

;Highest value :

;Field name :
TDNAME
;Type of field :
CHAR
;Length of field / Display length / Query length :
30 / 23 / 30
;Is this field in the base table Y/N :
**N
;Copy field value from :

;Default value :

;Page :
2
;Line :
20
;Column :
15
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :

;Lowest value :

;Highest value :

;Field name :
STRAT_COLUMN
;Type of field :
CHAR
;Length of field / Display length / Query length :
12 / 12 / 12
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
21
;Column :
15
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Stratigraphic column to be used for this well.
;Lowest value :

;Highest value :

;Field name :
SHORT_NAME
;Type of field :
CHAR
;Length of field / Display length / Query length :
28 / 20 / 28
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
16
;Column :
52
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
This name is used when making plots (maps); abbreviate where necessary
;Lowest value :

;Highest value :

;Field name :
SPUD_DATE
;Type of field :
DATE
;Length of field / Display length / Query length :
10 / 9 / 10
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
17
;Column :
52
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
Y
;Convert field to upper case Y/N :
Y
;Help message :
Enter year as dd-mon-yy (12-DEC-87)
;Lowest value :

;Highest value :

;Field name :
COMP_DATE
;Type of field :
DATE
;Length of field / Display length / Query length :
10 / 9 / 10
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
17
;Column :
71
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
Y
;Auto jump to next field Y/N :
Y
;Convert field to upper case Y/N :
Y
;Help message :
Enter date as dd-mon-yy (12-DEC-89)
;Lowest value :

;Highest value :

;Field name :
CLASS
;Type of field :
CHAR
;Length of field / Display length / Query length :
60 / 12 / 60
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
18
;Column :
52
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**POST-CHANGE
/
;SQL>
SELECT CODE
FROM CODES.WELL_CLASS_CODES
WHERE CODE = :HEADER.CLASS

;Message if value not found :
Invalid well classification.   Try [LIST_VALUES] (esc V on VT100)
;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Well Classification (e.g. New Field Wildcat)
;Lowest value :
@CODES.WELL_CLASS_CODES.CODE
;Field name :
ELEVATION
;Type of field :
NUMBER
;Length of field / Display length / Query length :
9 / 9 / 22
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
19
;Column :
52
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
Y
;Convert field to upper case Y/N :
N
;Help message :
Operator Elevation (Enter reference in next field)
;Lowest value :
-200
;Highest value :
19999
;Field name :
ELEVATION_REF
;Type of field :
CHAR
;Length of field / Display length / Query length :
2 / 2 / 2
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :
KB
;Page :
2
;Line :
19
;Column :
67
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Press ESC V (VT100) or F13 (VT220/240) to list values (e.g. KB=Kelly Bushing)
;Lowest value :
@CODES.DATUMELEVCODE.CODE
;Field name :
PROPRIETARY
;Type of field :
CHAR
;Length of field / Display length / Query length :
1 / 1 / 1
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
20
;Column :
52
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**POST-CHANGE
/
;SQL>
#EXEMACRO CASE GLOBAL.SW IS
WHEN 'QUERY' THEN NULL;
WHEN OTHERS THEN EXETRG FILL_PROPRI;
END CASE;
/
;Message if value not found :

;Must value exist Y/N :
Y
;SQL>
**FILL_PROPRI
/
;SQL>
SELECT '*' INTO HEADER.PROPRIETARY FROM DUAL

;Message if value not found :
Unable to enter '*' into the prorietary flag field.
;Must value exist Y/N :
N
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
An asterisk (*) indicates that this well is proprietary
;Lowest value :

;Highest value :

;Field name :
FIELD
;Type of field :
CHAR
;Length of field / Display length / Query length :
30 / 12 / 40
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
20
;Column :
61
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Name or code of field that contains this well
;Lowest value :

;Highest value :

;Field name :
LEASE_NAME
;Type of field :
CHAR
;Length of field / Display length / Query length :
40 / 28 / 40
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
21
;Column :
52
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**KEY-NXTFLD
/
;SQL>
#EXEMACRO GOFLD HEADER.UWI;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Name of the lease on which this well was drilled.
;Lowest value :

;Highest value :

;Field name :
LAST_UPDATE
;Type of field :
DATE
;Length of field / Display length / Query length :
9 / 9 / 9
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :
$$date$$
;Page :
2
;Line :
2
;Column :
15
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
Y
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
Y
;Convert field to upper case Y/N :
Y
;Help message :
Date of well entry into data base, or date of last update
;Lowest value :

;Highest value :

;Field name :
NODE_ID
;Type of field :
CHAR
;Length of field / Display length / Query length :
20 / 1 / 20
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :

;SQL>

;Field name :
PRIMARY_SOURCE
;Type of field :
CHAR
;Length of field / Display length / Query length :
30 / 12 / 30
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :
:CONTROL1.OWNER
;Page :
2
;Line :
2
;Column :
68
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
Y
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Name of information 'owner'; source of information
;Lowest value :

;Highest value :

;Field name :

;Block name / Description :
NODES/*NODES
;Table name :
DEFAULT_PROJECT.NODES
;Check for uniqueness before inserting Y/N :
N
;Display/Buffer how many records :
1 / 1
;Field name :
*PRE-INSERT
;SQL>
#COPY CONTROL1.OWNER NODES.SOURCE
/
;Message if value not found :

;Must value exist Y/N :
Y
#EXEMACRO CASE NODES.NODE_ID IS
  WHEN '' THEN EXETRG MOVE_NODE_ID;
  END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*PRE-UPDATE
;SQL>
#COPY CONTROL1.OWNER NODES.SOURCE

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*POST-CHANGE
;SQL>
#EXEMACRO CASE NODES.NODE_ID IS
  WHEN '' THEN EXETRG MOVE_NODE_ID;
  END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-CREREC
;SQL>
#EXEMACRO GOFLD :CONTROL1.UWI;CLRFLD
GOBLK HEADER; CREREC; GOBLK NODES; CREREC; GOBLK HEADER;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-DELREC
;SQL>
#EXEMACRO GOBLK HEADER; DELREC;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-ENTQRY
;SQL>
#EXEMACRO CLRBLK; GOBLK HEADER; ENTQRY;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-EXEQRY
;SQL>
#EXEMACRO GOBLK HEADER; EXEQRY;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-NXTBLK
;SQL>
#EXEMACRO CASE :HEADER.LOCATION_TABLE IS
WHEN 'WELL_LOCATIONS' THEN GOBLK WELL_LOCATIONS;EXEQRY;
WHEN 'WELL_TEXAS_LOC' THEN GOBLK WELL_TEXAS_LOC;EXEQRY;
WHEN 'WELL_M_B' THEN GOBLK WELL_M_B;EXEQRY;
WHEN OTHERS THEN EXETRG GO_NXT_FORM;END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-NXTREC
;SQL>
#EXEMACRO GOBLK HEADER; NXTREC; GOBLK NODES; EXEQRY; GOBLK HEADER;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-PRVREC
;SQL>
#EXEMACRO GOBLK HEADER; PRVREC; GOBLK NODES; EXEQRY; GOBLK HEADER;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*FILL_OTHER_LOC
;SQL>
#EXEMACRO NOFAIL CASE HEADER.LOCATION_TABLE IS
WHEN 'WELL_LOCATIONS' THEN EXETRG WELL_LOC_SELECT;
WHEN 'WELL_TEXAS_LOC' THEN EXETRG TX_LOC_SELECT;
WHEN 'WELL_M_B' THEN EXETRG M_B_SELECT;
WHEN OTHERS THEN NULL;END CASE;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*M_B_SELECT
;SQL>
SELECT 'Distance: '||NS_DIST||''||NS_DIR||','||
EW_DIST||''||EW_DIR||' From: '||SURFACE_LOCATION||
' Desc: '||DESCRIPTION||''
FROM DEFAULT_PROJECT.WELL_M_B M WHERE M.NODE_ID = :HEADER.NODE_ID

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*MOVE_NODE_ID
;SQL>
SELECT ESI.LYNX_ID_SEQ.NEXTVAL
INTO HEADER.NODE_ID
FROM DUAL
/
;Message if value not found :
UNABLE TO GENERATE A NODE_ID.
;Must value exist Y/N :
Y
#COPY HEADER.NODE_ID NODES.NODE_ID

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*TX_LOC_SELECT
;SQL>
SELECT 'Survey: '||SURVEY||' Block: '||BLOCK||' Abs: '||ABSTRACT_NUMBER||'
Desc: '||LOCATION_DESC||'' INTO HEADER.OTHER_LOC
FROM DEFAULT_PROJECT.WELL_TEXAS_LOC T WHERE T.NODE_ID = :HEADER.NODE_ID

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*WELL_LOC_SELECT
;SQL>
SELECT 'Sec.: '||SECTION||' T'||TOWNSHIP||''||NORTH_SOUTH||' R'||RANGE||'
'||EAST_WEST||' PM: '||PRINCIPAL_MERIDIAN||' Spot: '||SPOT_CODE||' Distance:
'||NS_FOOTAGE||' '||NS||', '||EW_FOOTAGE||' '||EW||' Desc:
 '||DESCRIPTION||''
INTO HEADER.OTHER_LOC FROM DEFAULT_PROJECT.WELL_LOCATIONS L
WHERE L.NODE_ID = :HEADER.NODE_ID

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
NODE_ID
;Type of field :
INT
;Length of field / Display length / Query length :
20 / 14 / 20
;Is this field in the base table Y/N :
**Y
;Is this field part of the primary key Y/N :
Y
;Field to copy primary key from :
HEADER.NODE_ID
;Page :
2
;Line :
7
;Column :
22
;Prompt :

;Allow field to be entered Y/N :
*N
;Allow entry of query condition Y/N :
Y
;SQL>
**KEY-PRVFLD
/
;SQL>
#EXEMACRO GOFLD HEADER.DIGITIZE_TOP;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Node ID of this point.  NOTE: This field is NOT updatable on this form!
;Lowest value :

;Highest value :

;Field name :
NODE_X
;Type of field :
NUMBER
;Length of field / Display length / Query length :
10 / 10 / 10
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
8
;Column :
10
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**KEY-PRVFLD
/
;SQL>
#EXEMACRO GOFLD HEADER.DIGITIZE_TOP;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
X Coordinate of the top position of this well
;Lowest value :

;Highest value :

;Field name :
NODE_Y
;Type of field :
NUMBER
;Length of field / Display length / Query length :
11 / 11 / 0
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
8
;Column :
28
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**KEY-NXTFLD
/
;SQL>
#EXEMACRO GOFLD HEADER.TOP_DELTA_X;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :

;Lowest value :

;Highest value :

;Field name :
LATITUDE
;Type of field :
NUMBER
;Length of field / Display length / Query length :
11 / 11 / 11
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
10
;Column :
10
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**KEY-PRVFLD
/
;SQL>
#EXEMACRO GOFLD HEADER.TOP_DELTA_Y;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :

;Lowest value :

;Highest value :

;Field name :
LONGITUDE
;Type of field :
NUMBER
;Length of field / Display length / Query length :
11 / 11 / 11
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
10
;Column :
28
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**KEY-NXTFLD
/
;SQL>
#EXEMACRO GOFLD HEADER.LOCATION_TABLE;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :

;Lowest value :

;Highest value :

;Field name :
SOURCE
;Type of field :
CHAR
;Length of field / Display length / Query length :
30 / 11 / 30
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
2
;Line :
10
;Column :
48
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**KEY-PRVFLD
/
;SQL>
#EXEMACRO GOFLD HEADER.DEVIATION_FLAG;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :

;Lowest value :

;Highest value :

;Field name :
LOC_QUAL
;Type of field :
CHAR
;Length of field / Display length / Query length :
1 / 1 / 1
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :
A
;Page :
2
;Line :
10
;Column :
76
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>
**POST-CHANGE
/
;SQL>
SELECT NULL FROM DUAL
WHERE :NODES.LOC_QUAL IN ('A','T','R')
/
;Message if value not found :
Must be one of (A)ctual, (T)heoretical, or (R)ationalized
;Must value exist Y/N :
Y
;SQL>
**KEY-NXTFLD
/
;SQL>
#EXEMACRO GOFLD HEADER.OTHER_LOC;

;Message if value not found :

;Must value exist Y/N :
Y
;Is field mandatory Y/N :
Y
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
One of (A)ctual, (T)heoretical, or      (R)ationalized
;Lowest value :

;Highest value :

;Field name :

;Block name / Description :
*CONTROL1/Control block for setting form options
;Enter default WHERE and ORDER BY clause :

;Table name :
*
;Check for uniqueness before inserting Y/N :
N
;Display/Buffer how many records :
1 / 1
;Field name :
*KEY-PRVBLK
;SQL>
#EXEMACRO EXETRG GO_PRV_FORM;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
OWNER
;Type of field :
CHAR
;Length of field / Display length / Query length :
18 / 18 / 18
;Is this field in the base table Y/N :
N
;Default value :
ESI
;Page :
1
;Line :
14
;Column :
35
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
Y
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Name of entity that 'owns' the well information record after updates
;Lowest value :

;Highest value :

;Field name :
SELECT_LIST_NAME
;Type of field :
CHAR
;Length of field / Display length / Query length :
62 / 18 / 62
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
16
;Column :
35
;Prompt :

;Allow field to be entered Y/N :
*Y
;Allow field to be updated Y/N :
Y
;Allow entry of query condition Y/N :
N
;SQL>
**POST-CHANGE
/
;SQL>
SELECT TEMP_LIST_NAME FROM TEMP_WELL_LISTS
WHERE TEMP_LIST_NAME=:CONTROL1.SELECT_LIST_NAME
/
;Message if value not found :
$ $RESET_NAME This select list is not active; return to GLOBAL menu to activate it
;Must value exist Y/N :
N
#EXEMACRO COPY CONTROL1.SELECT_LIST_NAME INTO GLOBAL.LIST_NAME;
ENDTRIG;
/
;Message if value not found :

;Must value exist Y/N :
Y
$RESET_NAME
#COPY GLOBAL.LIST_NAME :CONTROL1.SELECT_LIST_NAME

;Message if value not found :
*
;Must value exist Y/N :
N
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Name of control list - clear to allow   all wells to be accessed.
;Lowest value :
@TEMP_WELL_LISTS.TEMP_LIST_NAME
;Field name :
TODAY
;Type of field :
DATE
;Length of field / Display length / Query length :
9 / 9 / 9
;Is this field in the base table Y/N :
N
;Default value :
$$DATE$$
;Page :
1
;Line :
12
;Column :
35
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Field name :
USER_NAME
;Type of field :
CHAR
;Length of field / Display length / Query length :
18 / 18 / 18
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
10
;Column :
35
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Field name :
STRATCOL
;Type of field :
CHAR
;Length of field / Display length / Query length :
30 / 18 / 50
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
8
;Column :
35
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter the name of your stratigraphic column
;Lowest value :
@DEFAULT_PROJECT.STRAT_COLUMNS.STRAT_COLUMN_NAME
;Field name :
PROJECT
;Type of field :
CHAR
;Length of field / Display length / Query length :
30 / 18 / 30
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
6
;Column :
35
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Field name :
CURRFORM
;Type of field :
CHAR
;Length of field / Display length / Query length :
80 / 24 / 80
;Is this field in the base table Y/N :
**N
;Copy field value from :

;Default value :

;Page :
1
;Line :
6
;Column :
57
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :

;Lowest value :

;Highest value :

;Field name :
NXTFORM
;Type of field :
CHAR
;Length of field / Display length / Query length :
80 / 24 / 80
;Is this field in the base table Y/N :
**N
;Copy field value from :

;Default value :

;Page :
1
;Line :
8
;Column :
57
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :

;Lowest value :

;Highest value :

;Field name :
PRVFORM
;Type of field :
CHAR
;Length of field / Display length / Query length :
80 / 24 / 80
;Is this field in the base table Y/N :
**N
;Copy field value from :

;Default value :

;Page :
1
;Line :
10
;Column :
57
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :

;Lowest value :

;Highest value :

;Field name :
LASTFORM
;Type of field :
CHAR
;Length of field / Display length / Query length :
80 / 24 / 80
;Is this field in the base table Y/N :
**N
;Copy field value from :

;Default value :

;Page :
1
;Line :
12
;Column :
57
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :

;Lowest value :

;Highest value :

;Field name :
CURRFORMSEQ
;Type of field :
INT
;Length of field / Display length / Query length :
24 / 5 / 24
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
5
;Column :
76
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Field name :
NXTFORMSEQ
;Type of field :
INT
;Length of field / Display length / Query length :
5 / 5 / 5
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
7
;Column :
76
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Field name :
PRVFORMSEQ
;Type of field :
INT
;Length of field / Display length / Query length :
5 / 5 / 5
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
9
;Column :
76
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Field name :
LASTFORMSEQ
;Type of field :
INT
;Length of field / Display length / Query length :
5 / 5 / 5
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
11
;Column :
76
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Field name :
FORMSEQMIN
;Type of field :
INT
;Length of field / Display length / Query length :
11 / 11 / 11
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
14
;Column :
57
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Field name :
FORMSEQMAX
;Type of field :
INT
;Length of field / Display length / Query length :
11 / 11 / 11
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
14
;Column :
69
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Field name :
CONTROL_ID
;Type of field :
INT
;Length of field / Display length / Query length :
11 / 11 / 11
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
16
;Column :
57
;Prompt :

;Allow field to be entered Y/N :
N
;SQL>

;Field name :
UWI
;Type of field :
CHAR
;Length of field / Display length / Query length :
20 / 20 / 20
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
18
;Column :
57
;Prompt :

;Allow field to be entered Y/N :
*Y
;Allow field to be updated Y/N :
Y
;Allow entry of query condition Y/N :
N
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :

;Lowest value :

;Highest value :

;Field name :
PRV_FORM_FLAG
;Type of field :
CHAR
;Length of field / Display length / Query length :
10 / 10 / 10
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
18
;Column :
35
;Prompt :

;Allow field to be entered Y/N :
*Y
;Allow field to be updated Y/N :
N
;Allow entry of query condition Y/N :
N
;SQL>
**POST-CHANGE
/
;SQL>
SELECT NULL FROM DUAL
WHERE :CONTROL1.PRV_FORM_FLAG IN ('SEQ','LAST')

;Message if value not found :
Enter 'SEQ' to use sequence list, enter 'LAST' to go to the last form used.
;Must value exist Y/N :
Y
;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :

;Lowest value :

;Highest value :

;Field name :
SCOUT_CMD_STRING
;Type of field :
CHAR
;Length of field / Display length / Query length :
240 / 40 / 240
;Is this field in the base table Y/N :
N
;Default value :

;Page :
1
;Line :
4
;Column :
1
;Prompt :

;Allow field to be entered Y/N :
*Y
;Allow field to be updated Y/N :
Y
;Allow entry of query condition Y/N :
N
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :

;Lowest value :

;Highest value :

;Field name :

;Block name / Description :
WELL_LOCATIONS/WELL_LOCATIONS
;Table name :
DEFAULT_PROJECT.WELL_LOCATIONS
;Check for uniqueness before inserting Y/N :
N
;Display/Buffer how many records :
1
;Field name :
*PRE-INSERT
;SQL>
#COPY CONTROL1.OWNER WELL_LOCATIONS.SOURCE

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*PRE-UPDATE
;SQL>
#COPY CONTROL1.OWNER WELL_LOCATIONS.SOURCE

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-NXTBLK
;SQL>
#EXEMACRO COPY '5' INTO SYSTEM.MESSAGE_LEVEL;COMMIT;
COPY '0' INTO SYSTEM.MESSAGE_LEVEL;
EXETRG LEAVE_FORM;EXETRG GO_NXT_FORM;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-PRVBLK
;SQL>
#EXEMACRO GOBLK HEADER;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
NODE_ID
;Type of field :
INT
;Length of field / Display length / Query length :
20 / 20 / 20
;Is this field in the base table Y/N :
*Y
;Is this field part of the primary key Y/N :
Y
;Field to copy primary key from :
HEADER.NODE_ID
;Page :
3
;Line :
4
;Column :
20
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
Y
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : NODE_ID
;Lowest value :

;Highest value :

;Field name :
SOURCE
;Type of field :
CHAR
;Length of field / Display length / Query length :
12 / 12 / 12
;Is this field in the base table Y/N :
**Y
;Is this field part of the primary key Y/N :
N
;Copy field value from :

;Default value :
:CONTROL1.OWNER
;Page :
3
;Line :
4
;Column :
60
;Prompt :

;Allow field to be entered Y/N :
*N
;Allow entry of query condition Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : SOURCE
;Lowest value :

;Highest value :

;Field name :
SECTION
;Type of field :
NUMBER
;Length of field / Display length / Query length :
5 / 5 / 5
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
6
;Column :
20
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : SECTION
;Lowest value :

;Highest value :

;Field name :
SECTION_TYPE
;Type of field :
CHAR
;Length of field / Display length / Query length :
4 / 4 / 4
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
6
;Column :
60
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : SECTION_TYPE
;Lowest value :

;Highest value :

;Field name :
TOWNSHIP
;Type of field :
NUMBER
;Length of field / Display length / Query length :
5 / 5 / 5
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
8
;Column :
20
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : TOWNSHIP
;Lowest value :

;Highest value :

;Field name :
NORTH_SOUTH
;Type of field :
CHAR
;Length of field / Display length / Query length :
1 / 1 / 1
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
8
;Column :
60
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : NORTH_SOUTH
;Lowest value :

;Highest value :

;Field name :
RANGE
;Type of field :
NUMBER
;Length of field / Display length / Query length :
4 / 4 / 4
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
10
;Column :
20
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : RANGE
;Lowest value :

;Highest value :

;Field name :
EAST_WEST
;Type of field :
CHAR
;Length of field / Display length / Query length :
1 / 1 / 1
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
10
;Column :
60
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : EAST_WEST
;Lowest value :

;Highest value :

;Field name :
SPOT_CODE
;Type of field :
CHAR
;Length of field / Display length / Query length :
10 / 10 / 10
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
12
;Column :
20
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : SPOT_CODE
;Lowest value :

;Highest value :

;Field name :
PRINCIPAL_MERIDIAN
;Type of field :
NUMBER
;Length of field / Display length / Query length :
4 / 4 / 4
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
12
;Column :
60
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : PRINCIPAL_MERIDIAN
;Lowest value :

;Highest value :

;Field name :
NS_FOOTAGE
;Type of field :
NUMBER
;Length of field / Display length / Query length :
9 / 9 / 9
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
14
;Column :
20
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : NS_FOOTAGE
;Lowest value :

;Highest value :

;Field name :
NS
;Type of field :
CHAR
;Length of field / Display length / Query length :
3 / 3 / 3
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
14
;Column :
60
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : NS
;Lowest value :

;Highest value :

;Field name :
EW_FOOTAGE
;Type of field :
NUMBER
;Length of field / Display length / Query length :
9 / 9 / 9
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
16
;Column :
20
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : EW_FOOTAGE
;Lowest value :

;Highest value :

;Field name :
EW
;Type of field :
CHAR
;Length of field / Display length / Query length :
3 / 3 / 3
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
16
;Column :
60
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : EW
;Lowest value :

;Highest value :

;Field name :
DESCRIPTION
;Type of field :
CHAR
;Length of field / Display length / Query length :
240 / 80 / 240
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
3
;Line :
19
;Column :
1
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : DESCRIPTION
;Lowest value :

;Highest value :

;Field name :

;Block name / Description :
WELL_TEXAS_LOC/WELL_TEXAS_LOC
;Table name :
DEFAULT_PROJECT.WELL_TEXAS_LOC
;Check for uniqueness before inserting Y/N :
N
;Display/Buffer how many records :
1
;Field name :
*PRE-INSERT
;SQL>
#COPY CONTROL1.OWNER WELL_TEXAS_LOC.SOURCE

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*PRE-UPDATE
;SQL>
#COPY CONTROL1.OWNER WELL_TEXAS_LOC.SOURCE

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-NXTBLK
;SQL>
#EXEMACRO COPY '5' INTO SYSTEM.MESSAGE_LEVEL;COMMIT;
COPY '0' INTO SYSTEM.MESSAGE_LEVEL;EXETRG LEAVE_FORM;EXETRG GO_NXT_FORM;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-PRVBLK
;SQL>
#EXEMACRO GOBLK HEADER;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
NODE_ID
;Type of field :
INT
;Length of field / Display length / Query length :
20 / 20 / 20
;Is this field in the base table Y/N :
**Y
;Is this field part of the primary key Y/N :
N
;Copy field value from :
HEADER.NODE_ID
;Page :
4
;Line :
4
;Column :
20
;Prompt :

;Allow field to be entered Y/N :
*N
;Allow entry of query condition Y/N :
Y
;SQL>

;Is field mandatory Y/N :
Y
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : NODE_ID
;Lowest value :

;Highest value :

;Field name :
SOURCE
;Type of field :
CHAR
;Length of field / Display length / Query length :
12 / 12 / 12
;Is this field in the base table Y/N :
**Y
;Is this field part of the primary key Y/N :
N
;Copy field value from :

;Default value :
:CONTROL1.OWNER
;Page :
4
;Line :
4
;Column :
60
;Prompt :

;Allow field to be entered Y/N :
*N
;Allow entry of query condition Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : SOURCE
;Lowest value :

;Highest value :

;Field name :
SURVEY
;Type of field :
CHAR
;Length of field / Display length / Query length :
12 / 12 / 12
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
4
;Line :
6
;Column :
16
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : SURVEY
;Lowest value :

;Highest value :

;Field name :
BLOCK
;Type of field :
CHAR
;Length of field / Display length / Query length :
3 / 3 / 3
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
4
;Line :
6
;Column :
37
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : BLOCK
;Lowest value :

;Highest value :

;Field name :
ABSTRACT_NUMBER
;Type of field :
CHAR
;Length of field / Display length / Query length :
5 / 5 / 5
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
4
;Line :
6
;Column :
60
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : ABSTRACT_NUMBER
;Lowest value :

;Highest value :

;Field name :
LOCATION_DESC
;Type of field :
CHAR
;Length of field / Display length / Query length :
240 / 80 / 240
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
4
;Line :
9
;Column :
1
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : LOCATION_DESC
;Lowest value :

;Highest value :

;Field name :

;Block name / Description :
WELL_M_B/WELL METES AND BOUNDS
;Table name :
DEFAULT_PROJECT.WELL_M_B
;Check for uniqueness before inserting Y/N :
N
;Display/Buffer how many records :
1
;Field name :
*PRE-INSERT
;SQL>
#COPY CONTROL1.OWNER WELL_M_B.SOURCE

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*PRE-UPDATE
;SQL>
#COPY CONTROL1.OWNER WELL_M_B.SOURCE

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-NXTBLK
;SQL>
#EXEMACRO COPY '5' INTO SYSTEM.MESSAGE_LEVEL;COMMIT;
COPY '0' INTO SYSTEM.MESSAGE_LEVEL;EXETRG LEAVE_FORM;EXETRG GO_NXT_FORM;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
*KEY-PRVBLK
;SQL>
#EXEMACRO GOBLK HEADER;

;Message if value not found :

;Must value exist Y/N :
Y
;Field name :
NODE_ID
;Type of field :
INT
;Length of field / Display length / Query length :
20 / 20 / 20
;Is this field in the base table Y/N :
*Y
;Is this field part of the primary key Y/N :
N
;Copy field value from :
HEADER.NODE_ID
;Page :
5
;Line :
4
;Column :
20
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
Y
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : NODE_ID
;Lowest value :

;Highest value :

;Field name :
SOURCE
;Type of field :
CHAR
;Length of field / Display length / Query length :
12 / 12 / 12
;Is this field in the base table Y/N :
**Y
;Is this field part of the primary key Y/N :
N
;Copy field value from :

;Default value :
:CONTROL1.OWNER
;Page :
5
;Line :
4
;Column :
60
;Prompt :

;Allow field to be entered Y/N :
*N
;Allow entry of query condition Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : SOURCE
;Lowest value :

;Highest value :

;Field name :
NS_DIST
;Type of field :
NUMBER
;Length of field / Display length / Query length :
9 / 9 / 9
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
5
;Line :
8
;Column :
33
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : NS_DIST
;Lowest value :

;Highest value :

;Field name :
NS_DIR
;Type of field :
CHAR
;Length of field / Display length / Query length :
1 / 1 / 1
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
5
;Line :
8
;Column :
62
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : NS_DIR
;Lowest value :

;Highest value :

;Field name :
EW_DIST
;Type of field :
NUMBER
;Length of field / Display length / Query length :
9 / 9 / 9
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
5
;Line :
10
;Column :
33
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : EW_DIST
;Lowest value :

;Highest value :

;Field name :
EW_DIR
;Type of field :
CHAR
;Length of field / Display length / Query length :
1 / 1 / 1
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
5
;Line :
10
;Column :
62
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
Y
;Help message :
Enter value for : EW_DIR
;Lowest value :

;Highest value :

;Field name :
REFERENCE_LOCATION
;Type of field :
CHAR
;Length of field / Display length / Query length :
20 / 20 / 20
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
5
;Line :
12
;Column :
45
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : REFERENCE_LOCATION
;Lowest value :

;Highest value :

;Field name :
DESCRIPTION
;Type of field :
CHAR
;Length of field / Display length / Query length :
240 / 80 / 240
;Is this field in the base table Y/N :
Y
;Is this field part of the primary key Y/N :
N
;Default value :

;Page :
5
;Line :
15
;Column :
1
;Prompt :

;Allow field to be entered Y/N :
Y
;Allow field to be updated Y/N :
Y
;SQL>

;Is field mandatory Y/N :
N
;Is field fixed length Y/N :
N
;Auto jump to next field Y/N :
N
;Convert field to upper case Y/N :
N
;Help message :
Enter value for : DESCRIPTION
;Lowest value :

;Highest value :

;Field name :

;Block name / Description :

%LINE
2
               Control Block-FINDER Well Information Form
%LINE
5
                                                        Currform:     SEQ:
         Your Current Project Is:
                                                        NXTFORM:      SEQ:
    Your Stratigraphic Column is:
                                                        PRVFORM:      SEQ:
    Your Source for Top Picks is:
                                                        LASTFORM:     SEQ:
                        Today is:
                                                        FORMSEQMIN: FORMSEQMAX:
 Your Owner ID for other data is:
                                                        CONTROL_ID:
      The current select list is:
                                                        CURRENT UWI:
    Your previous form option is:
%LINE
20
     ESC K shows the list of function keys      Hit 'NEXT BLOCK' to continue
     0 on keypad is HELP                                  (1 on Keypad)
%LINE
1
%BOX
           p------------------------------------------------------q
           |                                                      |
           b------------------------------------------------------d
%LINE
19
   p----------------------------------------q  p-----------------------------q
   |                                        |  |                             |
   |                                        |  |                             |
   b----------------------------------------d  b-----------------------------d
%TEXT
%PAGE
                         FINDER Well Information System            Prim Source
 Last Update:             Well Header Information Form
%LINE
4
 UWI:                      Well Name:
      Status:                                   Digitizing Color:
   Digitize                   Surface Location
            Node ID:                     Location Table:
      X:                Y:                  Plot Symbol:     Deviated:
     dX:               dY:             (Offset from top node position)
    Lat:             Long:             Source:               Loc. Quality:
 Other location info from Location Table indicated above:
%LINE
13
                             Bottom Hole Location
   dX:               dY:            (Offset from top hole position)
%LINE
16
    Operator:                          Short Name:
 Drillers TD:                           Spud Date:          CompDate:
   True Vert:                               Class:
  Form. @ TD:                          Oper. Elev:           Ref:
  Translated:                         Proprietary:   Field:
   Strat Col:                          Lease Name:
  Use PRINT key for Scout Ticket                                      v.6.4
%LINE
3
%LINE
3
%BOX
p------------------------------------------------------------------------------q
|                                                                              |
(-q                                                                            |
| (         -----------------                  --------------------------------)
(-d                                                                            |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
(---------------------------                      -----------------------------)
|                                                                              |
(------------------------------------------------------------------------------)
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
b-                              --------------------------------------     ----d
%TEXT
%PAGE
%LINE
2
         ======== Section-Township-Range Location Information  ========
%LINE
4
     Well Node ID:                                 Source:
%LINE
6
          Section:                           Section Type:
%LINE
8
         Township:                            North/South:
%LINE
10
            Range:                              East/West:
%LINE
12
        Spot Code:                     Principal Meridian:
%LINE
14
      N/S Footage:                  From North/South Line:
%LINE
16
      E/W Footage:                    From East/West Line:
%LINE
18
Description:
%LINE
21
Use NEXT BLOCK to go to next form, PREVIOUS BLOCK to go to Header Page.
%PAGE
%LINE
2
                ========  Texas Location Information  ========
%LINE
4
     Well Node ID:                                 Source:
%LINE
6
       Survey:               Block:       Abstract Number:
%LINE
8
Description:
%LINE
21
Use NEXT BLOCK to go to next form, PREVIOUS BLOCK to return to the Header page.
%PAGE
%LINE
2
                   ========  Well Metes and Bounds ========
%LINE
4
          NODE ID:                                 Source:
%LINE
8
                  N/S Distance:               N/S Direction:
%LINE
10
                  E/W Distance:               E/W Direction:
%LINE
12
             Node ID of Reference Location:
%LINE
14
Description:
%LINE
21
Use NEXT BLOCK to go to next form, PREVIOUS BLOCK to return to the Header page.
%END
/* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP*/
/*  17   18-FEB-1992 16:52:52 LOEBL "(SPR 2063) fix case 2063, 3875, list of values"*/
/*  16   18-NOV-1991 18:26:47 LOEBL "(SPR 0) Convert to SQL*FORMS V3.0 Format"*/
/* *15   16-JUL-1991 12:30:59 ALLAWAY "(SPR 7744) fix navigation screwed up by previous fixes."*/
/* *14   12-JUL-1991 14:59:36 ALLAWAY "(SPR 7744) fix bugs from sprs 7744,7777,7757,7778,7746"*/
/* *13   11-JAN-1991 09:04:20 ALLAWAY "(SPR 6049) forgot to update version nos, add message to key-print trigger"*/
/* *12    9-JAN-1991 16:05:11 ALLAWAY "(SPR 6049) Update to support scout on sun and host independant file names."*/
/* *11   21-DEC-1990 13:24:02 ALLAWAY "(SPR 5515) Fix bug in Well_M_B page of form"*/
/* *10   26-NOV-1990 14:19:02 ALLAWAY "(SPR 5885) Fix operator field so that it matches the column definition"*/
/* *9    26-NOV-1990 13:23:58 ALLAWAY "(SPR 5885) Fix field length bugs"*/
/* *8    26-OCT-1990 16:22:43 GILLESPIE "(SPR 33) Use LYNX_ID_SEQ instead of NODE_ID_SEQ"*/
/* *7    16-JUL-1990 18:43:39 ALLAWAY "(SPR -1) CHECKIN FOR 7-15-90 SCHEMA UPDATE"*/
/* *6     7-JUN-1990 07:32:41 ALLAWAY "(SPR 5505) FIX BUG IN STARTING SCOUT TICKETS"*/
/* *5    25-MAY-1990 14:47:09 ALLAWAY "(SPR 5505) FIX FIELD SEQENCING PROBLEMS"*/
/* *4    24-MAY-1990 15:22:49 ALLAWAY "(SPR 505) FIX OMMISSION FROM KEY-STARTUP.COM"*/
/* *3    24-MAY-1990 14:56:40 ALLAWAY "(SPR 5505) FIXED BUG IN MOVING TO NEXT FORM FROM LOCATION PAGES"*/
/* *2    24-MAY-1990 13:45:26 ALLAWAY "(SPR 5505) Update for scout ticket support and minor bug fixes"*/
/* *1    23-MAY-1990 10:31:19 VINCE "Initial Checkin"*/
/* DEC/CMS REPLACEMENT HISTORY, Element WELL_HDR.INP*/
