/* DEC/CMS REPLACEMENT HISTORY, Element XSZ_SAVE_TOPS.PC*/
/* *2    17-AUG-1990 22:36:42 VINCE "(SPR 5644) Code Cleanup"*/
/* *1    19-JUN-1989 12:42:27 SYSTEM ""*/
/* DEC/CMS REPLACEMENT HISTORY, Element XSZ_SAVE_TOPS.PC*/
/*****************************************************************************/
/******************************************************************************

                Copyright Exploration Systems, Inc. 1989
                    Unpublished -- All rights reserved

THIS SOFTWARE IS THE PROPRIETARY PROPERTY OF Exploration Systems, Inc.  AND MAY
CONTAIN CONFIDENTIAL TRADE SECRET INFORMATION. IT IS LICENSED FOR USE ON THE
DESIGNATED EQUIPMENT ON WHICH IT WAS ORIGINALLY INSTALLED AND  MAY NOT BE
MODIFIED, DUPLICATED OR COPIED IN ANY FORM WITHOUT PRIOR WRITTEN CONSENT OF

                            Exploration Systems
                            c/o Finder Graphics Systems
                            201 Tamal Vista Blvd.
                            Corte Madera, CA  94925
                            (415) 927-0100

(The above notice does not constitute an admission of publication or
unrestricted dissemination of the work)

******************************************************************************/

#include "esi_xs_defs.h"

#ifndef ESI_QS_H

#include "esi_qs.h"

#endif

#ifndef ESI_ORACLE_H

#include "esi_oracle.h"

#endif

#ifndef ESI_WE_WELLS_H

#include "esi_we_wells.h"

#endif

#ifndef ESI_LL_H

#include "esi_ll.h"

#endif

#ifndef ESI_BT_H

#include "esi_bt.h"

#endif

/* Function Description -----------------------------------------------------
Description:
    This routine will save tops to two tables: 
        1. WELL_TOPS. 
        2. LITHOSTART_CODES.
            
Prototype:
    publicdef INT xsz_save_tops(XS_STRUCT *pxs, INT total_tops, INT top_index[]);

Parameters:     (indicate (I)/(O)/(M) for input/output/input-and-modified)
    (I) pxs         -(XS_STRUCT *) A pointer points to the XS_STRUCT.
    (I) total_tops  -(INT) The total number of tops requested to be saved.
    (I) top_index   -(INT []) An array of indexes of tops in the to_table.

Return Value/Status:
    SUCCESS - Successful completion.
    FAIL    - Unsuccessful completion.
    OR_STATUS
    
Scope:
    PUBLIC
    
Limitations/Assumptions:

-----------------------------------------------------------------------------*/

/* BEGIN:   */
#if USE_PROTOTYPES
publicdef INT xsz_save_tops (XS_STRUCT *pxs, INT total_tops, INT top_index[])
#else
publicdef INT xsz_save_tops (pxs, total_tops, top_index)
XS_STRUCT *pxs;
INT total_tops;
INT top_index[];
#endif
    {
    INT status = SUCCESS;           /*   result status.                      */
    INT i = 0, j = 0;
    INT total_uwis = 0;
    PROJECT_NAME current_project;
    TOP_STRUCT top_struct;
    TOP_INFO *top_info;
    UWI uwi;
    EXEC SQL BEGIN DECLARE SECTION;
    VARCHAR select[512];
    char *code_column;
    EXEC SQL END DECLARE SECTION;
    
    /* ************************************************************************* */
    
    /* inquire the current project.      */
    qs_inq_c (QS_PROJECT_NAME, current_project, (INT *)0);
    
    /* check the existence of TOP, if the */
    /* TOP does not exist, insert a new one*/
    
    select.len = sprintf ((char *)select.arr, 
"INSERT INTO %s.LITHOSTRAT_CODES (CODE, DISPLAY) \
             VALUES (:code_column, :code_column)"
            , current_project);
    EXEC SQL PREPARE S1 FROM : select;
    
    for (i = 0; i < total_tops AND status EQUALS SUCCESS; i++)
        {
        status = llgetn (&(pxs->drawing.top_table), &top_info, top_index[i]);
        code_column = top_info->top;
        
        /* We try and insert the top into the lithostrat codes table
           This has several implications:
           1) If the analyst has not been permitted to insert into the project
              lithostrat codes table, it will not succeed
           2) If privilege exists but the code already exists, the DB will reject
              the record
           3) If privilege exists and the code does not exist, it will be inserted
           4) Note that mis-spelled formation codes may be propagated by this method
         */
        
        EXEC SQL EXECUTE S1 USING : code_column,  : code_column;
        EXEC SQL COMMIT WORK;
        }
    /* go througth all layouts to save   */
    /* tops.                 */
    
    for (j = 0; j < total_tops; j++)
        {
        status = llgetn (&(pxs->drawing.top_table), &top_info, top_index[j]);
        
        /* For each top save all requested */
        /* uwis.                       */
        if ((total_uwis = btcount (&top_info->uwis)) > 0)
            {
            for (i = 0; i < total_uwis; i++)
                {
                status = (i EQUALS 0) ? btfirst (&(top_info->uwis), uwi,
                                                &top_struct) :
                         btnext (&(top_info->uwis), uwi, &top_struct);
                if (top_struct.Depth.md > (HUGE_DEPTH / 2.0))
                    ;
                else
                    status = ls_put_top (uwi, top_info->top, &top_struct);
                }
            }
        }
    return status;
    
errrpt:
    status = OR_STATUS;
    return status;
    }
/* END:     */
