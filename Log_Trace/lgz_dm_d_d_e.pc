/* DEC/CMS REPLACEMENT HISTORY, Element LGZ_DM_D_D_E.PC*/
/* *6    23-AUG-1990 17:34:20 JESSIE "(SPR 1) fix include files"*/
/* *5    14-SEP-1989 16:16:03 GORDON "(SPR 100) Gulf/Sun/Unix mods"*/
/* *4    13-AUG-1989 01:45:40 GILLESPIE "(SPR 5) Change WLL_LOG_TRACE_HDR to WELL_LOG_CURVE; always release cursor"*/
/* *3     8-AUG-1989 10:43:50 VINCE "(SPR -1) added Gulf mods; static in SQL declare section"*/
/* *2    19-JUL-1989 15:08:25 GORDON "(SPR 100) Add mods from Sun port"*/
/* *1    19-JUN-1989 12:33:01 SYSTEM ""*/
/* DEC/CMS REPLACEMENT HISTORY, Element LGZ_DM_D_D_E.PC*/

/******************************************************************************

		Copyright Exploration Systems, Inc. 1989
		   Unpublished -- All rights reserved

THIS SOFTWARE IS THE PROPRIETARY PROPERTY OF Exploration Systems, Inc.  AND MAY
CONTAIN CONFIDENTIAL TRADE SECRET INFORMATION. IT IS LICENSED FOR USE ON THE
DESIGNATED EQUIPMENT ON WHICH IT WAS ORIGINALLY INSTALLED AND  MAY NOT BE
MODIFIED, DUPLICATED OR COPIED IN ANY FORM WITHOUT PRIOR WRITTEN CONSENT OF 

			Exploration Systems, Inc.
			579 Market Street
			San Francisco, CA  USA 94105
			(415) 974-1600

(The above notice does not constitute an admission of publication or
unrestricted dissemination of the work) 


******************************************************************************/

/* ****************************************************************************

    Author:   James Chang
    ************************************************************************* */

#ifndef ESI_LG_LDEFS_H
#include "esi_lg_ldefs.h"
#endif
#ifndef ESI_QS_H
#include "esi_qs.h"
#endif
#ifndef ESI_LG_ERR_H
#include "esi_lg_err.h"
#endif
#include "esi_oracle.h"

EXEC ORACLE OPTION (RELEASE_CURSOR = YES);

/*  ****************************************************************************

    ROUTINE:  LGZ_DELETE_DB_ENTRY

    DESCRIPTION
         a internal help routine of Trace Data Manager.  The function of this
         routine is to perform deleting a data base entry.

    ************************************************************************ */
publicdef INT lgz_delete_db_entry( traceStruct   )
    /* ********************************************************************* */
LOG_TRACE_STRUCT *traceStruct;
{
    INT status = SUCCESS;
    PROJECT_NAME project;

EXEC SQL BEGIN DECLARE SECTION;
    VARCHAR	select[512];  
EXEC SQL END DECLARE SECTION;

/*  ************************************************************************ */


    qs_inq_c(QS_PROJECT_NAME, project, (INT *) 0);

    EXEC SQL WHENEVER SQLERROR GOTO errrpt;
    EXEC SQL WHENEVER NOT FOUND GOTO errnfd;
    
	select.len = sprintf((char *)select.arr,
"DELETE FROM %s.WELL_LOG_CURVE_HDR \
WHERE TRACE_ID = %d", 
                                          project, traceStruct -> trace_id);
    EXEC SQL EXECUTE IMMEDIATE :select;
    if( OR_ROWCOUNT EQUALS 0 )
		goto errnfd;
    EXEC SQL COMMIT WORK;
    status = SUCCESS;
    goto way_out;

errrpt:
    status = OR_STATUS;
    goto way_out;
errnfd:
    status = LG_TRACE_NOT_FOUND;
way_out:
	return status;
}
