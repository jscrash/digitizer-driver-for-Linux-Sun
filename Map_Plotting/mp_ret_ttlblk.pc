/*  DEC/CMS REPLACEMENT HISTORY, Element MP_RET_TTLBLK.PC*/
/*  *2    17-AUG-1990 22:08:59 VINCE "(SPR 5644) Code Cleanup"*/
/*  *1    19-JUN-1989 12:34:58 SYSTEM ""*/
/*  DEC/CMS REPLACEMENT HISTORY, Element MP_RET_TTLBLK.PC*/
/*****************************************************************************/
/******************************************************************************

                Copyright Exploration Systems, Inc. 1989
                    Unpublished -- All rights reserved

THIS SOFTWARE IS THE PROPRIETARY PROPERTY OF Exploration Systems, Inc.  AND MAY
CONTAIN CONFIDENTIAL TRADE SECRET INFORMATION. IT IS LICENSED FOR USE ON THE
DESIGNATED EQUIPMENT ON WHICH IT WAS ORIGINALLY INSTALLED AND  MAY NOT BE
MODIFIED, DUPLICATED OR COPIED IN ANY FORM WITHOUT PRIOR WRITTEN CONSENT OF

                            Exploration Systems
                            c/o Finder Graphics Systems
                            201 Tamal Vista Blvd.
                            Corte Madera, CA  94925
                            (415) 927-0100

(The above notice does not constitute an admission of publication or
unrestricted dissemination of the work)

******************************************************************************/

#include "esi_gl_defs.h"
#include "esi_qs.h"
#include "esi_oracle.h"
#include "esi_dtypes.h"

/* EXEC ORACLE OPTION (REBIND = NO); */

/* Function Description -----------------------------------------------------
Description:
    Function to retrieve a TITLE BLOCK from the ORACLE data base.

Prototype:
    publicdef INT mp_ret_title_block(CHAR name[41],INT size[25],CHAR text[25][101]);

Parameters:     (indicate (I)/(O)/(M) for input/output/input-and-modified)
    name            -(CHAR [])
    size            -(INT [])
    text            -(CHAR [][])

Return Value/Status:
    SUCCESS - Successful completion.
    OR_EOF
    
Scope:
    PUBLIC
    
Limitations/Assumptions:

-----------------------------------------------------------------------------*/

/* BEGIN:   */
#if USE_PROTOTYPES
publicdef INT mp_ret_title_block (CHAR name[41], INT size[25], CHAR text[25][101])
#else
publicdef INT mp_ret_title_block (name, size, text)
CHAR name[41];
INT size[25];
CHAR text[25][101];
#endif
    {
    PROGNAME ("MP_RET_TITLE_BLOCK");
    INT status = SUCCESS;
    PROJECT_NAME project;
    INT i;
    static INT def_size[25] = 
        {
        1,
        1,
        1,
        4,
        5,
        5,
        5,
        5,
        3,
        3,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1
        };
    
    EXEC SQL BEGIN DECLARE SECTION;
    VARCHAR sqlstmt[200];
    long db_size[25];
    long db_field[25];
    VARCHAR db_text[25][101];
    EXEC SQL END DECLARE SECTION;
    
    /****************************************************************************/
    
    /* * OPEN SQL STATEMENT * */
    /* ---------------------- */
    
    qs_inq_c (QS_PROJECT_NAME, project, (INT *)0);
    sqlstmt.len = sprintf ((char *)sqlstmt.arr,
                  "SELECT FIELD_NUM,TEXT_SIZE,TEXT FROM %s.TITLE_BLOCKS WHERE BLOCK_NAME = '%s'"
                           , project, name);
    
    EXEC SQL WHENEVER SQLERROR GOTO orcerr;
    EXEC SQL PREPARE S1 FROM : sqlstmt;
    EXEC SQL DECLARE C1 CURSOR FOR S1;
    EXEC SQL OPEN C1;
    
    /* * CLEAR RETURN TEXT FIELDS * */
    /* ---------------------------- */
    
    tc_zeroes (text, 2525);
    hoblockmove (def_size, db_size, 25 * sizeof(INT));
    
    /* * FETCH TITLE BLOCK * */
    /* --------------------- */
    
    EXEC SQL FETCH C1 INTO : db_field,  : db_size,  : db_text;
    for (i = 0; i < OR_ROWCOUNT; i++)
        {
        size[db_field[i]] = db_size[i];
        V_FROMV (text[db_field[i]], db_text[i]);
        }
    goto finished;
    
    /* * ORACLE ERROR * */
    /* ---------------- */
    
orcerr:
    status = OR_EOF;
    
    /* * RETURN * */
    /* ---------- */
    
finished:
    EXEC SQL WHENEVER SQLERROR CONTINUE;
    EXEC SQL CLOSE C1;
    
    return status;
    }
/* END:     */
